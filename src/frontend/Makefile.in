# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id$

#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
sbin_PROGRAMS = storm-frontend-server$(EXEEXT)
subdir = src/frontend
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/frontend_version.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/argus.m4 \
	$(top_srcdir)/m4/boost.m4 $(top_srcdir)/m4/cgsi-gsoap.m4 \
	$(top_srcdir)/m4/curl.m4 $(top_srcdir)/m4/globus_pkgconfig.m4 \
	$(top_srcdir)/m4/gsoap.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/libuuid-devel.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/mysql.m4 $(top_srcdir)/m4/storm-xmlrpc-c.m4 \
	$(top_srcdir)/m4/storm.m4 $(top_srcdir)/m4/voms.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/autogen/config.h
CONFIG_CLEAN_FILES = frontend_version.h
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)"
PROGRAMS = $(sbin_PROGRAMS)
am__objects_1 =
am__objects_2 = storm_frontend_server-Credentials.$(OBJEXT) \
	storm_frontend_server-FullCredentials.$(OBJEXT) \
	storm_frontend_server-get_socket_info.$(OBJEXT) \
	storm_frontend_server-BolRequest.$(OBJEXT) \
	storm_frontend_server-BolStatusRequest.$(OBJEXT) \
	storm_frontend_server-PtpRequest.$(OBJEXT) \
	storm_frontend_server-PutStatusRequest.$(OBJEXT) \
	storm_frontend_server-PtgRequest.$(OBJEXT) \
	storm_frontend_server-GetStatusRequest.$(OBJEXT) \
	storm_frontend_server-CopyRequest.$(OBJEXT) \
	storm_frontend_server-CopyStatusRequest.$(OBJEXT) \
	storm_frontend_server-MkdirRequest.$(OBJEXT) \
	storm_frontend_server-RmdirRequest.$(OBJEXT) \
	storm_frontend_server-RmRequest.$(OBJEXT) \
	storm_frontend_server-LsRequest.$(OBJEXT) \
	storm_frontend_server-StatusLsRequest.$(OBJEXT) \
	storm_frontend_server-MvRequest.$(OBJEXT) \
	storm_frontend_server-SetPermissionRequest.$(OBJEXT) \
	storm_frontend_server-CheckPermissionRequest.$(OBJEXT) \
	storm_frontend_server-GetPermissionRequest.$(OBJEXT) \
	storm_frontend_server-ReserveSpaceRequest.$(OBJEXT) \
	storm_frontend_server-StatusReserveSpaceRequest.$(OBJEXT) \
	storm_frontend_server-ReleaseSpaceRequest.$(OBJEXT) \
	storm_frontend_server-UpdateSpaceRequest.$(OBJEXT) \
	storm_frontend_server-StatusUpdateSpaceRequest.$(OBJEXT) \
	storm_frontend_server-GetSpaceMetaDataRequest.$(OBJEXT) \
	storm_frontend_server-GetSpaceTokensRequest.$(OBJEXT) \
	storm_frontend_server-ChangeSpaceForFilesRequest.$(OBJEXT) \
	storm_frontend_server-StatusChangeSpaceForFilesRequest.$(OBJEXT) \
	storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.$(OBJEXT) \
	storm_frontend_server-PurgeFromSpaceRequest.$(OBJEXT) \
	storm_frontend_server-ReleaseFilesRequest.$(OBJEXT) \
	storm_frontend_server-PutDoneRequest.$(OBJEXT) \
	storm_frontend_server-AbortRequestRequest.$(OBJEXT) \
	storm_frontend_server-AbortFilesRequest.$(OBJEXT) \
	storm_frontend_server-SuspendRequestRequest.$(OBJEXT) \
	storm_frontend_server-ResumeRequestRequest.$(OBJEXT) \
	storm_frontend_server-ExtendFileLifeTimeRequest.$(OBJEXT) \
	storm_frontend_server-GetTransferProtocolsRequest.$(OBJEXT) \
	storm_frontend_server-PingRequest.$(OBJEXT) \
	storm_frontend_server-ProtocolChecker.$(OBJEXT) \
	storm_frontend_server-Authorization.$(OBJEXT) \
	storm_frontend_server-asynch.$(OBJEXT) \
	storm_frontend_server-asynch_status.$(OBJEXT) \
	storm_frontend_server-Surl.$(OBJEXT) \
	storm_frontend_server-srmv2_GetRequestSummary.$(OBJEXT) \
	storm_frontend_server-srmv2_GetRequestTokens.$(OBJEXT) \
	storm_frontend_server-FrontendConfiguration.$(OBJEXT) \
	storm_frontend_server-HttpPostClient.$(OBJEXT) \
	storm_frontend_server-DBConnectionPool.$(OBJEXT) \
	storm_frontend_server-ThreadPool.$(OBJEXT) \
	storm_frontend_server-srmlogit.$(OBJEXT) \
	storm_frontend_server-soap_util.$(OBJEXT) \
	storm_frontend_server-srmv2_dirreq.$(OBJEXT) \
	storm_frontend_server-srmv2_xferreq.$(OBJEXT) \
	storm_frontend_server-srmv2_permreq.$(OBJEXT) \
	storm_frontend_server-srmv2_spacereq.$(OBJEXT) \
	storm_frontend_server-synch.$(OBJEXT) \
	storm_frontend_server-surl_normalizer.$(OBJEXT) \
	storm_frontend_server-token_validator.$(OBJEXT) \
	storm_frontend_server-xmlrpc_decode.$(OBJEXT) \
	storm_frontend_server-xmlrpc_encode.$(OBJEXT) \
	storm_frontend_server-storm_util.$(OBJEXT) \
	storm_frontend_server-srmv2C.$(OBJEXT) \
	storm_frontend_server-srmv2Server.$(OBJEXT) \
	storm_frontend_server-Monitoring.$(OBJEXT) $(am__objects_1)
am_storm_frontend_server_OBJECTS = $(am__objects_2) \
	storm_frontend_server-storm-frontend.$(OBJEXT)
storm_frontend_server_OBJECTS = $(am_storm_frontend_server_OBJECTS)
storm_frontend_server_DEPENDENCIES =  \
	$(top_builddir)/src/db/libstormdb.la
storm_frontend_server_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) \
	$(storm_frontend_server_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src/autogen
depcomp = $(SHELL) $(top_srcdir)/./aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(storm_frontend_server_SOURCES)
DIST_SOURCES = $(storm_frontend_server_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARGUS_CFLAGS = @ARGUS_CFLAGS@
ARGUS_LIBS = @ARGUS_LIBS@
ARGUS_LOCATION = @ARGUS_LOCATION@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDPATH = @BOOST_LDPATH@
BOOST_PROGRAM_OPTIONS_LDFLAGS = @BOOST_PROGRAM_OPTIONS_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LDPATH = @BOOST_PROGRAM_OPTIONS_LDPATH@
BOOST_PROGRAM_OPTIONS_LIBS = @BOOST_PROGRAM_OPTIONS_LIBS@
BOOST_REGEX_LDFLAGS = @BOOST_REGEX_LDFLAGS@
BOOST_REGEX_LDPATH = @BOOST_REGEX_LDPATH@
BOOST_REGEX_LIBS = @BOOST_REGEX_LIBS@
BOOST_ROOT = @BOOST_ROOT@
BOOST_SYSTEM_LDFLAGS = @BOOST_SYSTEM_LDFLAGS@
BOOST_SYSTEM_LDPATH = @BOOST_SYSTEM_LDPATH@
BOOST_SYSTEM_LIBS = @BOOST_SYSTEM_LIBS@
BOOST_THREAD_LDFLAGS = @BOOST_THREAD_LDFLAGS@
BOOST_THREAD_LDPATH = @BOOST_THREAD_LDPATH@
BOOST_THREAD_LIBS = @BOOST_THREAD_LIBS@
BOOST_THREAD_WIN32_LDFLAGS = @BOOST_THREAD_WIN32_LDFLAGS@
BOOST_THREAD_WIN32_LDPATH = @BOOST_THREAD_WIN32_LDPATH@
BOOST_THREAD_WIN32_LIBS = @BOOST_THREAD_WIN32_LIBS@
BUILD_REQUIRES_LIBUUID_DEVEL = @BUILD_REQUIRES_LIBUUID_DEVEL@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CGSI_GSOAP_CFLAGS = @CGSI_GSOAP_CFLAGS@
CGSI_GSOAP_LOCATION = @CGSI_GSOAP_LOCATION@
CGSI_GSOAP_VOMS_CPP_PTHR_LIBS = @CGSI_GSOAP_VOMS_CPP_PTHR_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CURL_DEVEL_CFLAGS = @CURL_DEVEL_CFLAGS@
CURL_DEVEL_LIBS = @CURL_DEVEL_LIBS@
CURL_DEVEL_LOCATION = @CURL_DEVEL_LOCATION@
CURL_LIBS = @CURL_LIBS@
CURL_LOCATION = @CURL_LOCATION@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTBIN = @DISTBIN@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DISTSOURCE = @DISTSOURCE@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GLOBUS_CALLOUT_CFLAGS = @GLOBUS_CALLOUT_CFLAGS@
GLOBUS_CALLOUT_LIBS = @GLOBUS_CALLOUT_LIBS@
GLOBUS_COMMON_CFLAGS = @GLOBUS_COMMON_CFLAGS@
GLOBUS_COMMON_LIBS = @GLOBUS_COMMON_LIBS@
GLOBUS_COMMON_NOTHR_LIBS = @GLOBUS_COMMON_NOTHR_LIBS@
GLOBUS_COMMON_THR_LIBS = @GLOBUS_COMMON_THR_LIBS@
GLOBUS_CORE_CFLAGS = @GLOBUS_CORE_CFLAGS@
GLOBUS_CORE_LIBS = @GLOBUS_CORE_LIBS@
GLOBUS_FTP_CLIENT_CFLAGS = @GLOBUS_FTP_CLIENT_CFLAGS@
GLOBUS_FTP_CLIENT_LIBS = @GLOBUS_FTP_CLIENT_LIBS@
GLOBUS_FTP_CLIENT_NOTHR_LIBS = @GLOBUS_FTP_CLIENT_NOTHR_LIBS@
GLOBUS_FTP_CLIENT_THR_LIBS = @GLOBUS_FTP_CLIENT_THR_LIBS@
GLOBUS_FTP_CONTROL_CFLAGS = @GLOBUS_FTP_CONTROL_CFLAGS@
GLOBUS_FTP_CONTROL_LIBS = @GLOBUS_FTP_CONTROL_LIBS@
GLOBUS_GSI_CALLBACK_CFLAGS = @GLOBUS_GSI_CALLBACK_CFLAGS@
GLOBUS_GSI_CALLBACK_LIBS = @GLOBUS_GSI_CALLBACK_LIBS@
GLOBUS_GSI_CERT_UTILS_CFLAGS = @GLOBUS_GSI_CERT_UTILS_CFLAGS@
GLOBUS_GSI_CERT_UTILS_LIBS = @GLOBUS_GSI_CERT_UTILS_LIBS@
GLOBUS_GSI_CREDENTIAL_CFLAGS = @GLOBUS_GSI_CREDENTIAL_CFLAGS@
GLOBUS_GSI_CREDENTIAL_LIBS = @GLOBUS_GSI_CREDENTIAL_LIBS@
GLOBUS_GSI_OPENSSL_ERROR_CFLAGS = @GLOBUS_GSI_OPENSSL_ERROR_CFLAGS@
GLOBUS_GSI_OPENSSL_ERROR_LIBS = @GLOBUS_GSI_OPENSSL_ERROR_LIBS@
GLOBUS_GSI_PROXY_CORE_CFLAGS = @GLOBUS_GSI_PROXY_CORE_CFLAGS@
GLOBUS_GSI_PROXY_CORE_LIBS = @GLOBUS_GSI_PROXY_CORE_LIBS@
GLOBUS_GSI_PROXY_SSL_CFLAGS = @GLOBUS_GSI_PROXY_SSL_CFLAGS@
GLOBUS_GSI_PROXY_SSL_LIBS = @GLOBUS_GSI_PROXY_SSL_LIBS@
GLOBUS_GSI_SYSCONFIG_CFLAGS = @GLOBUS_GSI_SYSCONFIG_CFLAGS@
GLOBUS_GSI_SYSCONFIG_LIBS = @GLOBUS_GSI_SYSCONFIG_LIBS@
GLOBUS_GSSAPI_ERROR_CFLAGS = @GLOBUS_GSSAPI_ERROR_CFLAGS@
GLOBUS_GSSAPI_ERROR_LIBS = @GLOBUS_GSSAPI_ERROR_LIBS@
GLOBUS_GSSAPI_GSI_CFLAGS = @GLOBUS_GSSAPI_GSI_CFLAGS@
GLOBUS_GSSAPI_GSI_LIBS = @GLOBUS_GSSAPI_GSI_LIBS@
GLOBUS_GSS_ASSIST_CFLAGS = @GLOBUS_GSS_ASSIST_CFLAGS@
GLOBUS_GSS_ASSIST_LIBS = @GLOBUS_GSS_ASSIST_LIBS@
GLOBUS_GSS_NOTHR_LIBS = @GLOBUS_GSS_NOTHR_LIBS@
GLOBUS_GSS_THR_LIBS = @GLOBUS_GSS_THR_LIBS@
GLOBUS_IO_CFLAGS = @GLOBUS_IO_CFLAGS@
GLOBUS_IO_LIBS = @GLOBUS_IO_LIBS@
GLOBUS_LDAP_NOTHR_LIBS = @GLOBUS_LDAP_NOTHR_LIBS@
GLOBUS_LDAP_THR_LIBS = @GLOBUS_LDAP_THR_LIBS@
GLOBUS_NOTHR_CFLAGS = @GLOBUS_NOTHR_CFLAGS@
GLOBUS_NOTHR_LIBS = @GLOBUS_NOTHR_LIBS@
GLOBUS_OPENSSL_CFLAGS = @GLOBUS_OPENSSL_CFLAGS@
GLOBUS_OPENSSL_LIBS = @GLOBUS_OPENSSL_LIBS@
GLOBUS_OPENSSL_MODULE_CFLAGS = @GLOBUS_OPENSSL_MODULE_CFLAGS@
GLOBUS_OPENSSL_MODULE_LIBS = @GLOBUS_OPENSSL_MODULE_LIBS@
GLOBUS_SSL_NOTHR_LIBS = @GLOBUS_SSL_NOTHR_LIBS@
GLOBUS_SSL_THR_LIBS = @GLOBUS_SSL_THR_LIBS@
GLOBUS_THR_CFLAGS = @GLOBUS_THR_CFLAGS@
GLOBUS_THR_LIBS = @GLOBUS_THR_LIBS@
GLOBUS_XIO_CFLAGS = @GLOBUS_XIO_CFLAGS@
GLOBUS_XIO_LIBS = @GLOBUS_XIO_LIBS@
GREP = @GREP@
GSOAP_CFLAGS = @GSOAP_CFLAGS@
GSOAP_CK_CFLAGS = @GSOAP_CK_CFLAGS@
GSOAP_CK_LIBS = @GSOAP_CK_LIBS@
GSOAP_CK_PP_CFLAGS = @GSOAP_CK_PP_CFLAGS@
GSOAP_CK_PP_LIBS = @GSOAP_CK_PP_LIBS@
GSOAP_GENERATED_CODE_DIR_NAME = @GSOAP_GENERATED_CODE_DIR_NAME@
GSOAP_LIBS = @GSOAP_LIBS@
GSOAP_LOCATION = @GSOAP_LOCATION@
GSOAP_PP_CFLAGS = @GSOAP_PP_CFLAGS@
GSOAP_PP_LIBS = @GSOAP_PP_LIBS@
GSOAP_SSL_CFLAGS = @GSOAP_SSL_CFLAGS@
GSOAP_SSL_LIBS = @GSOAP_SSL_LIBS@
GSOAP_SSL_PP_CFLAGS = @GSOAP_SSL_PP_CFLAGS@
GSOAP_SSL_PP_LIBS = @GSOAP_SSL_PP_LIBS@
GSOAP_VERSION = @GSOAP_VERSION@
GSOAP_VERSION_NUM = @GSOAP_VERSION_NUM@
GSOAP_WSDL2H_LOCATION = @GSOAP_WSDL2H_LOCATION@
GSOAP_WSDL2H_VERSION = @GSOAP_WSDL2H_VERSION@
GSOAP_WSDL2H_VERSION_NUM = @GSOAP_WSDL2H_VERSION_NUM@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTYPE = @LIBTYPE@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MODULELOCATION = @MODULELOCATION@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_DEVEL_INSTALL_PATH = @MYSQL_DEVEL_INSTALL_PATH@
MYSQL_INSTALL_PATH = @MYSQL_INSTALL_PATH@
MYSQL_LIBS = @MYSQL_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_LONG_NAME = @PACKAGE_LONG_NAME@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_PREFIX_NAME = @PACKAGE_PREFIX_NAME@
PACKAGE_SHORT_NAME = @PACKAGE_SHORT_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PMYSQL = @PMYSQL@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SOAPCPP2 = @SOAPCPP2@
SOAPCPP2_FLAGS = @SOAPCPP2_FLAGS@
STORM_XMLRPC_C_DEVEL_CFLAGS = @STORM_XMLRPC_C_DEVEL_CFLAGS@
STORM_XMLRPC_C_DEVEL_LIBS = @STORM_XMLRPC_C_DEVEL_LIBS@
STORM_XMLRPC_C_DEVEL_LOCATION = @STORM_XMLRPC_C_DEVEL_LOCATION@
STORM_XMLRPC_C_LIBS = @STORM_XMLRPC_C_LIBS@
STORM_XMLRPC_C_LOCATION = @STORM_XMLRPC_C_LOCATION@
STRIP = @STRIP@
VERSION = @VERSION@
VOMS_CFLAGS = @VOMS_CFLAGS@
VOMS_INCLUDE_PATH = @VOMS_INCLUDE_PATH@
VOMS_INSTALL_PATH = @VOMS_INSTALL_PATH@
VOMS_LIBS = @VOMS_LIBS@
WORKDIR = @WORKDIR@
WSDL2H = @WSDL2H@
WSDL2H_BACK_COMPATIBILITY = @WSDL2H_BACK_COMPATIBILITY@
WSDL2H_FLAGS = @WSDL2H_FLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
MTC_CFLAGS = -DCTHREAD_LINUX -D_THREAD_SAFE -D_REENTRANT 
GENERATED_GSOAP_INCLUDES = $(top_srcdir)/wsdl/@GSOAP_GENERATED_CODE_DIR_NAME@
storm_frontend_server_SOURCES = $(stormfrontend_others) storm-frontend.cpp
storm_frontend_server_CFLAGS = $(INCLUDES)
storm_frontend_server_CXXFLAGS = $(INCLUDES)
storm_frontend_server_LDADD = \
    @VOMS_LIBS@ \
    @MYSQL_LIBS@ \
    @STORM_XMLRPC_C_DEVEL_LIBS@ \
    @CURL_DEVEL_LIBS@ \
    -L/usr/lib64 -lglobus_gssapi_gsi -lglobus_gss_assist \
    @CGSI_GSOAP_VOMS_CPP_PTHR_LIBS@ \
    @GSOAP_SSL_PP_LIBS@ \
    @BOOST_PROGRAM_OPTIONS_LIBS@ \
    @BOOST_THREAD_LIBS@ \
    @BOOST_REGEX_LIBS@ \
    $(top_builddir)/src/db/libstormdb.la \
    @ARGUS_LIBS@ \
    -lz -lm -luuid -lidn

storm_frontend_server_LDFLAGS = \
	@BOOST_THREAD_LDFLAGS@ \
	@BOOST_PROGRAM_OPTIONS_LDFLAGS@ \
	@BOOST_REGEX_LDFLAGS@

noinst_INCLUDES = osdep.h \
  srm_server.h \
  storm_constants.h \
  storm_functions.h \
  get_socket_info.h \
  storm_limits.h \
  storm_util.h \
  srmlogit.h \
  ProtocolChecker.hpp \
  xmlrpc_decode.h \
  xmlrpc_encode.h \
  $(GENERATED_GSOAP_INCLUDES)/srm.v2.2.h \
  $(GENERATED_GSOAP_INCLUDES)/srmv2H.h \
  $(GENERATED_GSOAP_INCLUDES)/srmv2Stub.h

stormfrontend_others = storm_exception.hpp \
	Credentials.cpp Credentials.hpp \
    FullCredentials.cpp FullCredentials.hpp \
    CredentialException.hpp \
    get_socket_info.hpp get_socket_info.cpp \
    base_request.hpp \
    file_request.hpp filerequest_template.hpp \
    file_status.hpp \
    StatusTemplate.hpp FileStatusRequest.hpp \
    BolRequest.cpp BolRequest.hpp BolStatusRequest.cpp BolStatusRequest.hpp \
    PtpRequest.cpp PtpRequest.hpp PutStatusRequest.cpp PutStatusRequest.hpp \
    PtgRequest.cpp PtgRequest.hpp GetStatusRequest.cpp GetStatusRequest.hpp \
    CopyRequest.cpp CopyRequest.hpp CopyStatusRequest.cpp CopyStatusRequest.hpp \
    request/synch/SynchRequest.hpp \
    request/synch/MkdirRequest.cpp request/synch/MkdirRequest.hpp \
    request/synch/RmdirRequest.cpp request/synch/RmdirRequest.hpp \
    request/synch/RmRequest.cpp request/synch/RmRequest.hpp \
    request/synch/LsRequest.cpp request/synch/LsRequest.hpp \
    request/synch/StatusLsRequest.cpp request/synch/StatusLsRequest.hpp \
    request/synch/MvRequest.cpp request/synch/MvRequest.hpp \
    request/synch/SetPermissionRequest.cpp request/synch/SetPermissionRequest.hpp \
    request/synch/CheckPermissionRequest.cpp request/synch/CheckPermissionRequest.hpp \
    request/synch/GetPermissionRequest.cpp request/synch/GetPermissionRequest.hpp \
    request/synch/ReserveSpaceRequest.cpp request/synch/ReserveSpaceRequest.hpp \
    request/synch/StatusReserveSpaceRequest.cpp request/synch/StatusReserveSpaceRequest.hpp \
    request/synch/ReleaseSpaceRequest.cpp request/synch/ReleaseSpaceRequest.hpp \
    request/synch/UpdateSpaceRequest.cpp request/synch/UpdateSpaceRequest.hpp \
    request/synch/StatusUpdateSpaceRequest.cpp request/synch/StatusUpdateSpaceRequest.hpp \
    request/synch/GetSpaceMetaDataRequest.cpp request/synch/GetSpaceMetaDataRequest.hpp \
    request/synch/GetSpaceTokensRequest.cpp request/synch/GetSpaceTokensRequest.hpp \
    request/synch/ChangeSpaceForFilesRequest.cpp request/synch/ChangeSpaceForFilesRequest.hpp \
    request/synch/StatusChangeSpaceForFilesRequest.cpp request/synch/StatusChangeSpaceForFilesRequest.hpp \
    request/synch/ExtendFileLifeTimeInSpaceRequest.cpp request/synch/ExtendFileLifeTimeInSpaceRequest.hpp \
    request/synch/PurgeFromSpaceRequest.cpp request/synch/PurgeFromSpaceRequest.hpp \
    request/synch/ReleaseFilesRequest.cpp request/synch/ReleaseFilesRequest.hpp \
    request/synch/PutDoneRequest.cpp request/synch/PutDoneRequest.hpp \
    request/synch/AbortRequestRequest.cpp request/synch/AbortRequestRequest.hpp \
    request/synch/AbortFilesRequest.cpp request/synch/AbortFilesRequest.hpp \
    request/synch/SuspendRequestRequest.cpp request/synch/SuspendRequestRequest.hpp \
    request/synch/ResumeRequestRequest.cpp request/synch/ResumeRequestRequest.hpp \
    request/synch/ExtendFileLifeTimeRequest.cpp request/synch/ExtendFileLifeTimeRequest.hpp \
    request/synch/GetTransferProtocolsRequest.cpp request/synch/GetTransferProtocolsRequest.hpp \
    request/synch/PingRequest.cpp request/synch/PingRequest.hpp \
    ProtocolChecker.cpp ProtocolChecker.hpp \
    Authorization.cpp Authorization.hpp \
    AuthorizationException.hpp ArgusException.hpp \
    cgsi_plugin_int.h \
    gssapi_openssl.h globus_gsi_gss_constants.h \
    asynch.cpp asynch_status.cpp \
    Surl.hpp Surl.cpp \
    BolSurl.hpp PtgSurl.hpp PtpSurl.hpp CopySurl.hpp \
    Turl.hpp BolTurl.hpp PtgTurl.hpp PtpTurl.hpp CopyTurl.hpp \
    srmv2_GetRequestSummary.cpp srmv2_GetRequestTokens.cpp \
    FrontendConfiguration.cpp FrontendConfiguration.hpp \
    HttpPostClient.cpp HttpPostClient.h \
    DBConnectionPool.cpp DBConnectionPool.hpp \
    ThreadPool.hpp ThreadPool.cpp \
    srmlogit.cpp sql_string.hpp soap_util.hpp soap_util.cpp \
    srmv2_dirreq.c srmv2_xferreq.c \
    srmv2_permreq.c srmv2_spacereq.c \
    synch.cpp synch.hpp\
    surl_normalizer.h surl_normalizer.c \
    token_validator.hpp token_validator.cpp \
    xmlrpc_decode.c xmlrpc_encode.c \
    storm_util.c storm_utils.hpp \
    srmv2C.cc \
    srmv2Server.cc \
    Monitor.hpp InstrumentedMonitor.hpp \
    MonitorStub.hpp InstrumentedMonitorBuilder.hpp \
    MonitorHelper.hpp \
    Monitoring.hpp Monitoring.cpp MonitoringHelper.hpp \
    MonitorNotEnabledException.hpp \
    $(noinst_INCLUDES)

INCLUDES = \
    @BOOST_CPPFLAGS@ \
    -I$(top_srcdir)/src/db \
    -I$(GENERATED_GSOAP_INCLUDES) \
    @GLOBUS_THR_CFLAGS@ \
    @STORM_XMLRPC_C_DEVEL_CFLAGS@ \
    @CURL_DEVEL_CFLAGS@ \
    @VOMS_CFLAGS@ \
    @GSOAP_SSL_PP_CFLAGS@  \
    @CGSI_GSOAP_CFLAGS@ \
    @MYSQL_CFLAGS@ \
    @ARGUS_CFLAGS@ \
    $(MTC_CFLAGS)


#GSOAP_SSL_CFLAGS 
MAINTAINERCLEANFILES = Makefile.in \
    srmv2C.cc \
    srmv2Server.cc

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/frontend/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/frontend/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
frontend_version.h: $(top_builddir)/config.status $(srcdir)/frontend_version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
storm-frontend-server$(EXEEXT): $(storm_frontend_server_OBJECTS) $(storm_frontend_server_DEPENDENCIES) 
	@rm -f storm-frontend-server$(EXEEXT)
	$(storm_frontend_server_LINK) $(storm_frontend_server_OBJECTS) $(storm_frontend_server_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-AbortFilesRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-AbortRequestRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-Authorization.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-BolRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-BolStatusRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-ChangeSpaceForFilesRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-CheckPermissionRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-CopyRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-CopyStatusRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-Credentials.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-DBConnectionPool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-FrontendConfiguration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-FullCredentials.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-GetPermissionRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-GetSpaceMetaDataRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-GetSpaceTokensRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-GetStatusRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-GetTransferProtocolsRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-HttpPostClient.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-LsRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-MkdirRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-Monitoring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-MvRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-PingRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-ProtocolChecker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-PtgRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-PtpRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-PurgeFromSpaceRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-PutDoneRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-PutStatusRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-ReleaseFilesRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-ReleaseSpaceRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-ReserveSpaceRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-ResumeRequestRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-RmRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-RmdirRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-SetPermissionRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-StatusChangeSpaceForFilesRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-StatusLsRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-StatusReserveSpaceRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-StatusUpdateSpaceRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-Surl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-SuspendRequestRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-ThreadPool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-UpdateSpaceRequest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-asynch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-asynch_status.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-get_socket_info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-soap_util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-srmlogit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-srmv2C.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-srmv2Server.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-srmv2_GetRequestSummary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-srmv2_GetRequestTokens.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-srmv2_dirreq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-srmv2_permreq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-srmv2_spacereq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-srmv2_xferreq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-storm-frontend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-storm_util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-surl_normalizer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-synch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-token_validator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-xmlrpc_decode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storm_frontend_server-xmlrpc_encode.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

storm_frontend_server-srmv2_dirreq.o: srmv2_dirreq.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-srmv2_dirreq.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2_dirreq.Tpo -c -o storm_frontend_server-srmv2_dirreq.o `test -f 'srmv2_dirreq.c' || echo '$(srcdir)/'`srmv2_dirreq.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2_dirreq.Tpo $(DEPDIR)/storm_frontend_server-srmv2_dirreq.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='srmv2_dirreq.c' object='storm_frontend_server-srmv2_dirreq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-srmv2_dirreq.o `test -f 'srmv2_dirreq.c' || echo '$(srcdir)/'`srmv2_dirreq.c

storm_frontend_server-srmv2_dirreq.obj: srmv2_dirreq.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-srmv2_dirreq.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2_dirreq.Tpo -c -o storm_frontend_server-srmv2_dirreq.obj `if test -f 'srmv2_dirreq.c'; then $(CYGPATH_W) 'srmv2_dirreq.c'; else $(CYGPATH_W) '$(srcdir)/srmv2_dirreq.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2_dirreq.Tpo $(DEPDIR)/storm_frontend_server-srmv2_dirreq.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='srmv2_dirreq.c' object='storm_frontend_server-srmv2_dirreq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-srmv2_dirreq.obj `if test -f 'srmv2_dirreq.c'; then $(CYGPATH_W) 'srmv2_dirreq.c'; else $(CYGPATH_W) '$(srcdir)/srmv2_dirreq.c'; fi`

storm_frontend_server-srmv2_xferreq.o: srmv2_xferreq.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-srmv2_xferreq.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2_xferreq.Tpo -c -o storm_frontend_server-srmv2_xferreq.o `test -f 'srmv2_xferreq.c' || echo '$(srcdir)/'`srmv2_xferreq.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2_xferreq.Tpo $(DEPDIR)/storm_frontend_server-srmv2_xferreq.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='srmv2_xferreq.c' object='storm_frontend_server-srmv2_xferreq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-srmv2_xferreq.o `test -f 'srmv2_xferreq.c' || echo '$(srcdir)/'`srmv2_xferreq.c

storm_frontend_server-srmv2_xferreq.obj: srmv2_xferreq.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-srmv2_xferreq.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2_xferreq.Tpo -c -o storm_frontend_server-srmv2_xferreq.obj `if test -f 'srmv2_xferreq.c'; then $(CYGPATH_W) 'srmv2_xferreq.c'; else $(CYGPATH_W) '$(srcdir)/srmv2_xferreq.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2_xferreq.Tpo $(DEPDIR)/storm_frontend_server-srmv2_xferreq.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='srmv2_xferreq.c' object='storm_frontend_server-srmv2_xferreq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-srmv2_xferreq.obj `if test -f 'srmv2_xferreq.c'; then $(CYGPATH_W) 'srmv2_xferreq.c'; else $(CYGPATH_W) '$(srcdir)/srmv2_xferreq.c'; fi`

storm_frontend_server-srmv2_permreq.o: srmv2_permreq.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-srmv2_permreq.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2_permreq.Tpo -c -o storm_frontend_server-srmv2_permreq.o `test -f 'srmv2_permreq.c' || echo '$(srcdir)/'`srmv2_permreq.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2_permreq.Tpo $(DEPDIR)/storm_frontend_server-srmv2_permreq.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='srmv2_permreq.c' object='storm_frontend_server-srmv2_permreq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-srmv2_permreq.o `test -f 'srmv2_permreq.c' || echo '$(srcdir)/'`srmv2_permreq.c

storm_frontend_server-srmv2_permreq.obj: srmv2_permreq.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-srmv2_permreq.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2_permreq.Tpo -c -o storm_frontend_server-srmv2_permreq.obj `if test -f 'srmv2_permreq.c'; then $(CYGPATH_W) 'srmv2_permreq.c'; else $(CYGPATH_W) '$(srcdir)/srmv2_permreq.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2_permreq.Tpo $(DEPDIR)/storm_frontend_server-srmv2_permreq.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='srmv2_permreq.c' object='storm_frontend_server-srmv2_permreq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-srmv2_permreq.obj `if test -f 'srmv2_permreq.c'; then $(CYGPATH_W) 'srmv2_permreq.c'; else $(CYGPATH_W) '$(srcdir)/srmv2_permreq.c'; fi`

storm_frontend_server-srmv2_spacereq.o: srmv2_spacereq.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-srmv2_spacereq.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2_spacereq.Tpo -c -o storm_frontend_server-srmv2_spacereq.o `test -f 'srmv2_spacereq.c' || echo '$(srcdir)/'`srmv2_spacereq.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2_spacereq.Tpo $(DEPDIR)/storm_frontend_server-srmv2_spacereq.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='srmv2_spacereq.c' object='storm_frontend_server-srmv2_spacereq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-srmv2_spacereq.o `test -f 'srmv2_spacereq.c' || echo '$(srcdir)/'`srmv2_spacereq.c

storm_frontend_server-srmv2_spacereq.obj: srmv2_spacereq.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-srmv2_spacereq.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2_spacereq.Tpo -c -o storm_frontend_server-srmv2_spacereq.obj `if test -f 'srmv2_spacereq.c'; then $(CYGPATH_W) 'srmv2_spacereq.c'; else $(CYGPATH_W) '$(srcdir)/srmv2_spacereq.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2_spacereq.Tpo $(DEPDIR)/storm_frontend_server-srmv2_spacereq.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='srmv2_spacereq.c' object='storm_frontend_server-srmv2_spacereq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-srmv2_spacereq.obj `if test -f 'srmv2_spacereq.c'; then $(CYGPATH_W) 'srmv2_spacereq.c'; else $(CYGPATH_W) '$(srcdir)/srmv2_spacereq.c'; fi`

storm_frontend_server-surl_normalizer.o: surl_normalizer.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-surl_normalizer.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-surl_normalizer.Tpo -c -o storm_frontend_server-surl_normalizer.o `test -f 'surl_normalizer.c' || echo '$(srcdir)/'`surl_normalizer.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-surl_normalizer.Tpo $(DEPDIR)/storm_frontend_server-surl_normalizer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='surl_normalizer.c' object='storm_frontend_server-surl_normalizer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-surl_normalizer.o `test -f 'surl_normalizer.c' || echo '$(srcdir)/'`surl_normalizer.c

storm_frontend_server-surl_normalizer.obj: surl_normalizer.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-surl_normalizer.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-surl_normalizer.Tpo -c -o storm_frontend_server-surl_normalizer.obj `if test -f 'surl_normalizer.c'; then $(CYGPATH_W) 'surl_normalizer.c'; else $(CYGPATH_W) '$(srcdir)/surl_normalizer.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-surl_normalizer.Tpo $(DEPDIR)/storm_frontend_server-surl_normalizer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='surl_normalizer.c' object='storm_frontend_server-surl_normalizer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-surl_normalizer.obj `if test -f 'surl_normalizer.c'; then $(CYGPATH_W) 'surl_normalizer.c'; else $(CYGPATH_W) '$(srcdir)/surl_normalizer.c'; fi`

storm_frontend_server-xmlrpc_decode.o: xmlrpc_decode.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-xmlrpc_decode.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-xmlrpc_decode.Tpo -c -o storm_frontend_server-xmlrpc_decode.o `test -f 'xmlrpc_decode.c' || echo '$(srcdir)/'`xmlrpc_decode.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-xmlrpc_decode.Tpo $(DEPDIR)/storm_frontend_server-xmlrpc_decode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='xmlrpc_decode.c' object='storm_frontend_server-xmlrpc_decode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-xmlrpc_decode.o `test -f 'xmlrpc_decode.c' || echo '$(srcdir)/'`xmlrpc_decode.c

storm_frontend_server-xmlrpc_decode.obj: xmlrpc_decode.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-xmlrpc_decode.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-xmlrpc_decode.Tpo -c -o storm_frontend_server-xmlrpc_decode.obj `if test -f 'xmlrpc_decode.c'; then $(CYGPATH_W) 'xmlrpc_decode.c'; else $(CYGPATH_W) '$(srcdir)/xmlrpc_decode.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-xmlrpc_decode.Tpo $(DEPDIR)/storm_frontend_server-xmlrpc_decode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='xmlrpc_decode.c' object='storm_frontend_server-xmlrpc_decode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-xmlrpc_decode.obj `if test -f 'xmlrpc_decode.c'; then $(CYGPATH_W) 'xmlrpc_decode.c'; else $(CYGPATH_W) '$(srcdir)/xmlrpc_decode.c'; fi`

storm_frontend_server-xmlrpc_encode.o: xmlrpc_encode.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-xmlrpc_encode.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-xmlrpc_encode.Tpo -c -o storm_frontend_server-xmlrpc_encode.o `test -f 'xmlrpc_encode.c' || echo '$(srcdir)/'`xmlrpc_encode.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-xmlrpc_encode.Tpo $(DEPDIR)/storm_frontend_server-xmlrpc_encode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='xmlrpc_encode.c' object='storm_frontend_server-xmlrpc_encode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-xmlrpc_encode.o `test -f 'xmlrpc_encode.c' || echo '$(srcdir)/'`xmlrpc_encode.c

storm_frontend_server-xmlrpc_encode.obj: xmlrpc_encode.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-xmlrpc_encode.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-xmlrpc_encode.Tpo -c -o storm_frontend_server-xmlrpc_encode.obj `if test -f 'xmlrpc_encode.c'; then $(CYGPATH_W) 'xmlrpc_encode.c'; else $(CYGPATH_W) '$(srcdir)/xmlrpc_encode.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-xmlrpc_encode.Tpo $(DEPDIR)/storm_frontend_server-xmlrpc_encode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='xmlrpc_encode.c' object='storm_frontend_server-xmlrpc_encode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-xmlrpc_encode.obj `if test -f 'xmlrpc_encode.c'; then $(CYGPATH_W) 'xmlrpc_encode.c'; else $(CYGPATH_W) '$(srcdir)/xmlrpc_encode.c'; fi`

storm_frontend_server-storm_util.o: storm_util.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-storm_util.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-storm_util.Tpo -c -o storm_frontend_server-storm_util.o `test -f 'storm_util.c' || echo '$(srcdir)/'`storm_util.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-storm_util.Tpo $(DEPDIR)/storm_frontend_server-storm_util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='storm_util.c' object='storm_frontend_server-storm_util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-storm_util.o `test -f 'storm_util.c' || echo '$(srcdir)/'`storm_util.c

storm_frontend_server-storm_util.obj: storm_util.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -MT storm_frontend_server-storm_util.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-storm_util.Tpo -c -o storm_frontend_server-storm_util.obj `if test -f 'storm_util.c'; then $(CYGPATH_W) 'storm_util.c'; else $(CYGPATH_W) '$(srcdir)/storm_util.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-storm_util.Tpo $(DEPDIR)/storm_frontend_server-storm_util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='storm_util.c' object='storm_frontend_server-storm_util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CFLAGS) $(CFLAGS) -c -o storm_frontend_server-storm_util.obj `if test -f 'storm_util.c'; then $(CYGPATH_W) 'storm_util.c'; else $(CYGPATH_W) '$(srcdir)/storm_util.c'; fi`

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

storm_frontend_server-Credentials.o: Credentials.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-Credentials.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-Credentials.Tpo -c -o storm_frontend_server-Credentials.o `test -f 'Credentials.cpp' || echo '$(srcdir)/'`Credentials.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-Credentials.Tpo $(DEPDIR)/storm_frontend_server-Credentials.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Credentials.cpp' object='storm_frontend_server-Credentials.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-Credentials.o `test -f 'Credentials.cpp' || echo '$(srcdir)/'`Credentials.cpp

storm_frontend_server-Credentials.obj: Credentials.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-Credentials.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-Credentials.Tpo -c -o storm_frontend_server-Credentials.obj `if test -f 'Credentials.cpp'; then $(CYGPATH_W) 'Credentials.cpp'; else $(CYGPATH_W) '$(srcdir)/Credentials.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-Credentials.Tpo $(DEPDIR)/storm_frontend_server-Credentials.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Credentials.cpp' object='storm_frontend_server-Credentials.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-Credentials.obj `if test -f 'Credentials.cpp'; then $(CYGPATH_W) 'Credentials.cpp'; else $(CYGPATH_W) '$(srcdir)/Credentials.cpp'; fi`

storm_frontend_server-FullCredentials.o: FullCredentials.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-FullCredentials.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-FullCredentials.Tpo -c -o storm_frontend_server-FullCredentials.o `test -f 'FullCredentials.cpp' || echo '$(srcdir)/'`FullCredentials.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-FullCredentials.Tpo $(DEPDIR)/storm_frontend_server-FullCredentials.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FullCredentials.cpp' object='storm_frontend_server-FullCredentials.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-FullCredentials.o `test -f 'FullCredentials.cpp' || echo '$(srcdir)/'`FullCredentials.cpp

storm_frontend_server-FullCredentials.obj: FullCredentials.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-FullCredentials.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-FullCredentials.Tpo -c -o storm_frontend_server-FullCredentials.obj `if test -f 'FullCredentials.cpp'; then $(CYGPATH_W) 'FullCredentials.cpp'; else $(CYGPATH_W) '$(srcdir)/FullCredentials.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-FullCredentials.Tpo $(DEPDIR)/storm_frontend_server-FullCredentials.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FullCredentials.cpp' object='storm_frontend_server-FullCredentials.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-FullCredentials.obj `if test -f 'FullCredentials.cpp'; then $(CYGPATH_W) 'FullCredentials.cpp'; else $(CYGPATH_W) '$(srcdir)/FullCredentials.cpp'; fi`

storm_frontend_server-get_socket_info.o: get_socket_info.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-get_socket_info.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-get_socket_info.Tpo -c -o storm_frontend_server-get_socket_info.o `test -f 'get_socket_info.cpp' || echo '$(srcdir)/'`get_socket_info.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-get_socket_info.Tpo $(DEPDIR)/storm_frontend_server-get_socket_info.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='get_socket_info.cpp' object='storm_frontend_server-get_socket_info.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-get_socket_info.o `test -f 'get_socket_info.cpp' || echo '$(srcdir)/'`get_socket_info.cpp

storm_frontend_server-get_socket_info.obj: get_socket_info.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-get_socket_info.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-get_socket_info.Tpo -c -o storm_frontend_server-get_socket_info.obj `if test -f 'get_socket_info.cpp'; then $(CYGPATH_W) 'get_socket_info.cpp'; else $(CYGPATH_W) '$(srcdir)/get_socket_info.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-get_socket_info.Tpo $(DEPDIR)/storm_frontend_server-get_socket_info.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='get_socket_info.cpp' object='storm_frontend_server-get_socket_info.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-get_socket_info.obj `if test -f 'get_socket_info.cpp'; then $(CYGPATH_W) 'get_socket_info.cpp'; else $(CYGPATH_W) '$(srcdir)/get_socket_info.cpp'; fi`

storm_frontend_server-BolRequest.o: BolRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-BolRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-BolRequest.Tpo -c -o storm_frontend_server-BolRequest.o `test -f 'BolRequest.cpp' || echo '$(srcdir)/'`BolRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-BolRequest.Tpo $(DEPDIR)/storm_frontend_server-BolRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BolRequest.cpp' object='storm_frontend_server-BolRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-BolRequest.o `test -f 'BolRequest.cpp' || echo '$(srcdir)/'`BolRequest.cpp

storm_frontend_server-BolRequest.obj: BolRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-BolRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-BolRequest.Tpo -c -o storm_frontend_server-BolRequest.obj `if test -f 'BolRequest.cpp'; then $(CYGPATH_W) 'BolRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/BolRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-BolRequest.Tpo $(DEPDIR)/storm_frontend_server-BolRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BolRequest.cpp' object='storm_frontend_server-BolRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-BolRequest.obj `if test -f 'BolRequest.cpp'; then $(CYGPATH_W) 'BolRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/BolRequest.cpp'; fi`

storm_frontend_server-BolStatusRequest.o: BolStatusRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-BolStatusRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-BolStatusRequest.Tpo -c -o storm_frontend_server-BolStatusRequest.o `test -f 'BolStatusRequest.cpp' || echo '$(srcdir)/'`BolStatusRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-BolStatusRequest.Tpo $(DEPDIR)/storm_frontend_server-BolStatusRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BolStatusRequest.cpp' object='storm_frontend_server-BolStatusRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-BolStatusRequest.o `test -f 'BolStatusRequest.cpp' || echo '$(srcdir)/'`BolStatusRequest.cpp

storm_frontend_server-BolStatusRequest.obj: BolStatusRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-BolStatusRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-BolStatusRequest.Tpo -c -o storm_frontend_server-BolStatusRequest.obj `if test -f 'BolStatusRequest.cpp'; then $(CYGPATH_W) 'BolStatusRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/BolStatusRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-BolStatusRequest.Tpo $(DEPDIR)/storm_frontend_server-BolStatusRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BolStatusRequest.cpp' object='storm_frontend_server-BolStatusRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-BolStatusRequest.obj `if test -f 'BolStatusRequest.cpp'; then $(CYGPATH_W) 'BolStatusRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/BolStatusRequest.cpp'; fi`

storm_frontend_server-PtpRequest.o: PtpRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-PtpRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-PtpRequest.Tpo -c -o storm_frontend_server-PtpRequest.o `test -f 'PtpRequest.cpp' || echo '$(srcdir)/'`PtpRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-PtpRequest.Tpo $(DEPDIR)/storm_frontend_server-PtpRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PtpRequest.cpp' object='storm_frontend_server-PtpRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-PtpRequest.o `test -f 'PtpRequest.cpp' || echo '$(srcdir)/'`PtpRequest.cpp

storm_frontend_server-PtpRequest.obj: PtpRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-PtpRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-PtpRequest.Tpo -c -o storm_frontend_server-PtpRequest.obj `if test -f 'PtpRequest.cpp'; then $(CYGPATH_W) 'PtpRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/PtpRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-PtpRequest.Tpo $(DEPDIR)/storm_frontend_server-PtpRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PtpRequest.cpp' object='storm_frontend_server-PtpRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-PtpRequest.obj `if test -f 'PtpRequest.cpp'; then $(CYGPATH_W) 'PtpRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/PtpRequest.cpp'; fi`

storm_frontend_server-PutStatusRequest.o: PutStatusRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-PutStatusRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-PutStatusRequest.Tpo -c -o storm_frontend_server-PutStatusRequest.o `test -f 'PutStatusRequest.cpp' || echo '$(srcdir)/'`PutStatusRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-PutStatusRequest.Tpo $(DEPDIR)/storm_frontend_server-PutStatusRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PutStatusRequest.cpp' object='storm_frontend_server-PutStatusRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-PutStatusRequest.o `test -f 'PutStatusRequest.cpp' || echo '$(srcdir)/'`PutStatusRequest.cpp

storm_frontend_server-PutStatusRequest.obj: PutStatusRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-PutStatusRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-PutStatusRequest.Tpo -c -o storm_frontend_server-PutStatusRequest.obj `if test -f 'PutStatusRequest.cpp'; then $(CYGPATH_W) 'PutStatusRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/PutStatusRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-PutStatusRequest.Tpo $(DEPDIR)/storm_frontend_server-PutStatusRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PutStatusRequest.cpp' object='storm_frontend_server-PutStatusRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-PutStatusRequest.obj `if test -f 'PutStatusRequest.cpp'; then $(CYGPATH_W) 'PutStatusRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/PutStatusRequest.cpp'; fi`

storm_frontend_server-PtgRequest.o: PtgRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-PtgRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-PtgRequest.Tpo -c -o storm_frontend_server-PtgRequest.o `test -f 'PtgRequest.cpp' || echo '$(srcdir)/'`PtgRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-PtgRequest.Tpo $(DEPDIR)/storm_frontend_server-PtgRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PtgRequest.cpp' object='storm_frontend_server-PtgRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-PtgRequest.o `test -f 'PtgRequest.cpp' || echo '$(srcdir)/'`PtgRequest.cpp

storm_frontend_server-PtgRequest.obj: PtgRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-PtgRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-PtgRequest.Tpo -c -o storm_frontend_server-PtgRequest.obj `if test -f 'PtgRequest.cpp'; then $(CYGPATH_W) 'PtgRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/PtgRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-PtgRequest.Tpo $(DEPDIR)/storm_frontend_server-PtgRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PtgRequest.cpp' object='storm_frontend_server-PtgRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-PtgRequest.obj `if test -f 'PtgRequest.cpp'; then $(CYGPATH_W) 'PtgRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/PtgRequest.cpp'; fi`

storm_frontend_server-GetStatusRequest.o: GetStatusRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-GetStatusRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-GetStatusRequest.Tpo -c -o storm_frontend_server-GetStatusRequest.o `test -f 'GetStatusRequest.cpp' || echo '$(srcdir)/'`GetStatusRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-GetStatusRequest.Tpo $(DEPDIR)/storm_frontend_server-GetStatusRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GetStatusRequest.cpp' object='storm_frontend_server-GetStatusRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-GetStatusRequest.o `test -f 'GetStatusRequest.cpp' || echo '$(srcdir)/'`GetStatusRequest.cpp

storm_frontend_server-GetStatusRequest.obj: GetStatusRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-GetStatusRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-GetStatusRequest.Tpo -c -o storm_frontend_server-GetStatusRequest.obj `if test -f 'GetStatusRequest.cpp'; then $(CYGPATH_W) 'GetStatusRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/GetStatusRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-GetStatusRequest.Tpo $(DEPDIR)/storm_frontend_server-GetStatusRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GetStatusRequest.cpp' object='storm_frontend_server-GetStatusRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-GetStatusRequest.obj `if test -f 'GetStatusRequest.cpp'; then $(CYGPATH_W) 'GetStatusRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/GetStatusRequest.cpp'; fi`

storm_frontend_server-CopyRequest.o: CopyRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-CopyRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-CopyRequest.Tpo -c -o storm_frontend_server-CopyRequest.o `test -f 'CopyRequest.cpp' || echo '$(srcdir)/'`CopyRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-CopyRequest.Tpo $(DEPDIR)/storm_frontend_server-CopyRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CopyRequest.cpp' object='storm_frontend_server-CopyRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-CopyRequest.o `test -f 'CopyRequest.cpp' || echo '$(srcdir)/'`CopyRequest.cpp

storm_frontend_server-CopyRequest.obj: CopyRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-CopyRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-CopyRequest.Tpo -c -o storm_frontend_server-CopyRequest.obj `if test -f 'CopyRequest.cpp'; then $(CYGPATH_W) 'CopyRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/CopyRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-CopyRequest.Tpo $(DEPDIR)/storm_frontend_server-CopyRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CopyRequest.cpp' object='storm_frontend_server-CopyRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-CopyRequest.obj `if test -f 'CopyRequest.cpp'; then $(CYGPATH_W) 'CopyRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/CopyRequest.cpp'; fi`

storm_frontend_server-CopyStatusRequest.o: CopyStatusRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-CopyStatusRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-CopyStatusRequest.Tpo -c -o storm_frontend_server-CopyStatusRequest.o `test -f 'CopyStatusRequest.cpp' || echo '$(srcdir)/'`CopyStatusRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-CopyStatusRequest.Tpo $(DEPDIR)/storm_frontend_server-CopyStatusRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CopyStatusRequest.cpp' object='storm_frontend_server-CopyStatusRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-CopyStatusRequest.o `test -f 'CopyStatusRequest.cpp' || echo '$(srcdir)/'`CopyStatusRequest.cpp

storm_frontend_server-CopyStatusRequest.obj: CopyStatusRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-CopyStatusRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-CopyStatusRequest.Tpo -c -o storm_frontend_server-CopyStatusRequest.obj `if test -f 'CopyStatusRequest.cpp'; then $(CYGPATH_W) 'CopyStatusRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/CopyStatusRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-CopyStatusRequest.Tpo $(DEPDIR)/storm_frontend_server-CopyStatusRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CopyStatusRequest.cpp' object='storm_frontend_server-CopyStatusRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-CopyStatusRequest.obj `if test -f 'CopyStatusRequest.cpp'; then $(CYGPATH_W) 'CopyStatusRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/CopyStatusRequest.cpp'; fi`

storm_frontend_server-MkdirRequest.o: request/synch/MkdirRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-MkdirRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-MkdirRequest.Tpo -c -o storm_frontend_server-MkdirRequest.o `test -f 'request/synch/MkdirRequest.cpp' || echo '$(srcdir)/'`request/synch/MkdirRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-MkdirRequest.Tpo $(DEPDIR)/storm_frontend_server-MkdirRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/MkdirRequest.cpp' object='storm_frontend_server-MkdirRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-MkdirRequest.o `test -f 'request/synch/MkdirRequest.cpp' || echo '$(srcdir)/'`request/synch/MkdirRequest.cpp

storm_frontend_server-MkdirRequest.obj: request/synch/MkdirRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-MkdirRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-MkdirRequest.Tpo -c -o storm_frontend_server-MkdirRequest.obj `if test -f 'request/synch/MkdirRequest.cpp'; then $(CYGPATH_W) 'request/synch/MkdirRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/MkdirRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-MkdirRequest.Tpo $(DEPDIR)/storm_frontend_server-MkdirRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/MkdirRequest.cpp' object='storm_frontend_server-MkdirRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-MkdirRequest.obj `if test -f 'request/synch/MkdirRequest.cpp'; then $(CYGPATH_W) 'request/synch/MkdirRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/MkdirRequest.cpp'; fi`

storm_frontend_server-RmdirRequest.o: request/synch/RmdirRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-RmdirRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-RmdirRequest.Tpo -c -o storm_frontend_server-RmdirRequest.o `test -f 'request/synch/RmdirRequest.cpp' || echo '$(srcdir)/'`request/synch/RmdirRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-RmdirRequest.Tpo $(DEPDIR)/storm_frontend_server-RmdirRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/RmdirRequest.cpp' object='storm_frontend_server-RmdirRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-RmdirRequest.o `test -f 'request/synch/RmdirRequest.cpp' || echo '$(srcdir)/'`request/synch/RmdirRequest.cpp

storm_frontend_server-RmdirRequest.obj: request/synch/RmdirRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-RmdirRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-RmdirRequest.Tpo -c -o storm_frontend_server-RmdirRequest.obj `if test -f 'request/synch/RmdirRequest.cpp'; then $(CYGPATH_W) 'request/synch/RmdirRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/RmdirRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-RmdirRequest.Tpo $(DEPDIR)/storm_frontend_server-RmdirRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/RmdirRequest.cpp' object='storm_frontend_server-RmdirRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-RmdirRequest.obj `if test -f 'request/synch/RmdirRequest.cpp'; then $(CYGPATH_W) 'request/synch/RmdirRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/RmdirRequest.cpp'; fi`

storm_frontend_server-RmRequest.o: request/synch/RmRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-RmRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-RmRequest.Tpo -c -o storm_frontend_server-RmRequest.o `test -f 'request/synch/RmRequest.cpp' || echo '$(srcdir)/'`request/synch/RmRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-RmRequest.Tpo $(DEPDIR)/storm_frontend_server-RmRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/RmRequest.cpp' object='storm_frontend_server-RmRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-RmRequest.o `test -f 'request/synch/RmRequest.cpp' || echo '$(srcdir)/'`request/synch/RmRequest.cpp

storm_frontend_server-RmRequest.obj: request/synch/RmRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-RmRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-RmRequest.Tpo -c -o storm_frontend_server-RmRequest.obj `if test -f 'request/synch/RmRequest.cpp'; then $(CYGPATH_W) 'request/synch/RmRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/RmRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-RmRequest.Tpo $(DEPDIR)/storm_frontend_server-RmRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/RmRequest.cpp' object='storm_frontend_server-RmRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-RmRequest.obj `if test -f 'request/synch/RmRequest.cpp'; then $(CYGPATH_W) 'request/synch/RmRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/RmRequest.cpp'; fi`

storm_frontend_server-LsRequest.o: request/synch/LsRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-LsRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-LsRequest.Tpo -c -o storm_frontend_server-LsRequest.o `test -f 'request/synch/LsRequest.cpp' || echo '$(srcdir)/'`request/synch/LsRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-LsRequest.Tpo $(DEPDIR)/storm_frontend_server-LsRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/LsRequest.cpp' object='storm_frontend_server-LsRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-LsRequest.o `test -f 'request/synch/LsRequest.cpp' || echo '$(srcdir)/'`request/synch/LsRequest.cpp

storm_frontend_server-LsRequest.obj: request/synch/LsRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-LsRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-LsRequest.Tpo -c -o storm_frontend_server-LsRequest.obj `if test -f 'request/synch/LsRequest.cpp'; then $(CYGPATH_W) 'request/synch/LsRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/LsRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-LsRequest.Tpo $(DEPDIR)/storm_frontend_server-LsRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/LsRequest.cpp' object='storm_frontend_server-LsRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-LsRequest.obj `if test -f 'request/synch/LsRequest.cpp'; then $(CYGPATH_W) 'request/synch/LsRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/LsRequest.cpp'; fi`

storm_frontend_server-StatusLsRequest.o: request/synch/StatusLsRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-StatusLsRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-StatusLsRequest.Tpo -c -o storm_frontend_server-StatusLsRequest.o `test -f 'request/synch/StatusLsRequest.cpp' || echo '$(srcdir)/'`request/synch/StatusLsRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-StatusLsRequest.Tpo $(DEPDIR)/storm_frontend_server-StatusLsRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/StatusLsRequest.cpp' object='storm_frontend_server-StatusLsRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-StatusLsRequest.o `test -f 'request/synch/StatusLsRequest.cpp' || echo '$(srcdir)/'`request/synch/StatusLsRequest.cpp

storm_frontend_server-StatusLsRequest.obj: request/synch/StatusLsRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-StatusLsRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-StatusLsRequest.Tpo -c -o storm_frontend_server-StatusLsRequest.obj `if test -f 'request/synch/StatusLsRequest.cpp'; then $(CYGPATH_W) 'request/synch/StatusLsRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/StatusLsRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-StatusLsRequest.Tpo $(DEPDIR)/storm_frontend_server-StatusLsRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/StatusLsRequest.cpp' object='storm_frontend_server-StatusLsRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-StatusLsRequest.obj `if test -f 'request/synch/StatusLsRequest.cpp'; then $(CYGPATH_W) 'request/synch/StatusLsRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/StatusLsRequest.cpp'; fi`

storm_frontend_server-MvRequest.o: request/synch/MvRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-MvRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-MvRequest.Tpo -c -o storm_frontend_server-MvRequest.o `test -f 'request/synch/MvRequest.cpp' || echo '$(srcdir)/'`request/synch/MvRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-MvRequest.Tpo $(DEPDIR)/storm_frontend_server-MvRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/MvRequest.cpp' object='storm_frontend_server-MvRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-MvRequest.o `test -f 'request/synch/MvRequest.cpp' || echo '$(srcdir)/'`request/synch/MvRequest.cpp

storm_frontend_server-MvRequest.obj: request/synch/MvRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-MvRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-MvRequest.Tpo -c -o storm_frontend_server-MvRequest.obj `if test -f 'request/synch/MvRequest.cpp'; then $(CYGPATH_W) 'request/synch/MvRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/MvRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-MvRequest.Tpo $(DEPDIR)/storm_frontend_server-MvRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/MvRequest.cpp' object='storm_frontend_server-MvRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-MvRequest.obj `if test -f 'request/synch/MvRequest.cpp'; then $(CYGPATH_W) 'request/synch/MvRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/MvRequest.cpp'; fi`

storm_frontend_server-SetPermissionRequest.o: request/synch/SetPermissionRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-SetPermissionRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-SetPermissionRequest.Tpo -c -o storm_frontend_server-SetPermissionRequest.o `test -f 'request/synch/SetPermissionRequest.cpp' || echo '$(srcdir)/'`request/synch/SetPermissionRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-SetPermissionRequest.Tpo $(DEPDIR)/storm_frontend_server-SetPermissionRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/SetPermissionRequest.cpp' object='storm_frontend_server-SetPermissionRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-SetPermissionRequest.o `test -f 'request/synch/SetPermissionRequest.cpp' || echo '$(srcdir)/'`request/synch/SetPermissionRequest.cpp

storm_frontend_server-SetPermissionRequest.obj: request/synch/SetPermissionRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-SetPermissionRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-SetPermissionRequest.Tpo -c -o storm_frontend_server-SetPermissionRequest.obj `if test -f 'request/synch/SetPermissionRequest.cpp'; then $(CYGPATH_W) 'request/synch/SetPermissionRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/SetPermissionRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-SetPermissionRequest.Tpo $(DEPDIR)/storm_frontend_server-SetPermissionRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/SetPermissionRequest.cpp' object='storm_frontend_server-SetPermissionRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-SetPermissionRequest.obj `if test -f 'request/synch/SetPermissionRequest.cpp'; then $(CYGPATH_W) 'request/synch/SetPermissionRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/SetPermissionRequest.cpp'; fi`

storm_frontend_server-CheckPermissionRequest.o: request/synch/CheckPermissionRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-CheckPermissionRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-CheckPermissionRequest.Tpo -c -o storm_frontend_server-CheckPermissionRequest.o `test -f 'request/synch/CheckPermissionRequest.cpp' || echo '$(srcdir)/'`request/synch/CheckPermissionRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-CheckPermissionRequest.Tpo $(DEPDIR)/storm_frontend_server-CheckPermissionRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/CheckPermissionRequest.cpp' object='storm_frontend_server-CheckPermissionRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-CheckPermissionRequest.o `test -f 'request/synch/CheckPermissionRequest.cpp' || echo '$(srcdir)/'`request/synch/CheckPermissionRequest.cpp

storm_frontend_server-CheckPermissionRequest.obj: request/synch/CheckPermissionRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-CheckPermissionRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-CheckPermissionRequest.Tpo -c -o storm_frontend_server-CheckPermissionRequest.obj `if test -f 'request/synch/CheckPermissionRequest.cpp'; then $(CYGPATH_W) 'request/synch/CheckPermissionRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/CheckPermissionRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-CheckPermissionRequest.Tpo $(DEPDIR)/storm_frontend_server-CheckPermissionRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/CheckPermissionRequest.cpp' object='storm_frontend_server-CheckPermissionRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-CheckPermissionRequest.obj `if test -f 'request/synch/CheckPermissionRequest.cpp'; then $(CYGPATH_W) 'request/synch/CheckPermissionRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/CheckPermissionRequest.cpp'; fi`

storm_frontend_server-GetPermissionRequest.o: request/synch/GetPermissionRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-GetPermissionRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-GetPermissionRequest.Tpo -c -o storm_frontend_server-GetPermissionRequest.o `test -f 'request/synch/GetPermissionRequest.cpp' || echo '$(srcdir)/'`request/synch/GetPermissionRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-GetPermissionRequest.Tpo $(DEPDIR)/storm_frontend_server-GetPermissionRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/GetPermissionRequest.cpp' object='storm_frontend_server-GetPermissionRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-GetPermissionRequest.o `test -f 'request/synch/GetPermissionRequest.cpp' || echo '$(srcdir)/'`request/synch/GetPermissionRequest.cpp

storm_frontend_server-GetPermissionRequest.obj: request/synch/GetPermissionRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-GetPermissionRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-GetPermissionRequest.Tpo -c -o storm_frontend_server-GetPermissionRequest.obj `if test -f 'request/synch/GetPermissionRequest.cpp'; then $(CYGPATH_W) 'request/synch/GetPermissionRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/GetPermissionRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-GetPermissionRequest.Tpo $(DEPDIR)/storm_frontend_server-GetPermissionRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/GetPermissionRequest.cpp' object='storm_frontend_server-GetPermissionRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-GetPermissionRequest.obj `if test -f 'request/synch/GetPermissionRequest.cpp'; then $(CYGPATH_W) 'request/synch/GetPermissionRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/GetPermissionRequest.cpp'; fi`

storm_frontend_server-ReserveSpaceRequest.o: request/synch/ReserveSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ReserveSpaceRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-ReserveSpaceRequest.Tpo -c -o storm_frontend_server-ReserveSpaceRequest.o `test -f 'request/synch/ReserveSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/ReserveSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ReserveSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-ReserveSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ReserveSpaceRequest.cpp' object='storm_frontend_server-ReserveSpaceRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ReserveSpaceRequest.o `test -f 'request/synch/ReserveSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/ReserveSpaceRequest.cpp

storm_frontend_server-ReserveSpaceRequest.obj: request/synch/ReserveSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ReserveSpaceRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-ReserveSpaceRequest.Tpo -c -o storm_frontend_server-ReserveSpaceRequest.obj `if test -f 'request/synch/ReserveSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/ReserveSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ReserveSpaceRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ReserveSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-ReserveSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ReserveSpaceRequest.cpp' object='storm_frontend_server-ReserveSpaceRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ReserveSpaceRequest.obj `if test -f 'request/synch/ReserveSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/ReserveSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ReserveSpaceRequest.cpp'; fi`

storm_frontend_server-StatusReserveSpaceRequest.o: request/synch/StatusReserveSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-StatusReserveSpaceRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-StatusReserveSpaceRequest.Tpo -c -o storm_frontend_server-StatusReserveSpaceRequest.o `test -f 'request/synch/StatusReserveSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/StatusReserveSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-StatusReserveSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-StatusReserveSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/StatusReserveSpaceRequest.cpp' object='storm_frontend_server-StatusReserveSpaceRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-StatusReserveSpaceRequest.o `test -f 'request/synch/StatusReserveSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/StatusReserveSpaceRequest.cpp

storm_frontend_server-StatusReserveSpaceRequest.obj: request/synch/StatusReserveSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-StatusReserveSpaceRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-StatusReserveSpaceRequest.Tpo -c -o storm_frontend_server-StatusReserveSpaceRequest.obj `if test -f 'request/synch/StatusReserveSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/StatusReserveSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/StatusReserveSpaceRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-StatusReserveSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-StatusReserveSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/StatusReserveSpaceRequest.cpp' object='storm_frontend_server-StatusReserveSpaceRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-StatusReserveSpaceRequest.obj `if test -f 'request/synch/StatusReserveSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/StatusReserveSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/StatusReserveSpaceRequest.cpp'; fi`

storm_frontend_server-ReleaseSpaceRequest.o: request/synch/ReleaseSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ReleaseSpaceRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-ReleaseSpaceRequest.Tpo -c -o storm_frontend_server-ReleaseSpaceRequest.o `test -f 'request/synch/ReleaseSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/ReleaseSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ReleaseSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-ReleaseSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ReleaseSpaceRequest.cpp' object='storm_frontend_server-ReleaseSpaceRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ReleaseSpaceRequest.o `test -f 'request/synch/ReleaseSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/ReleaseSpaceRequest.cpp

storm_frontend_server-ReleaseSpaceRequest.obj: request/synch/ReleaseSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ReleaseSpaceRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-ReleaseSpaceRequest.Tpo -c -o storm_frontend_server-ReleaseSpaceRequest.obj `if test -f 'request/synch/ReleaseSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/ReleaseSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ReleaseSpaceRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ReleaseSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-ReleaseSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ReleaseSpaceRequest.cpp' object='storm_frontend_server-ReleaseSpaceRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ReleaseSpaceRequest.obj `if test -f 'request/synch/ReleaseSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/ReleaseSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ReleaseSpaceRequest.cpp'; fi`

storm_frontend_server-UpdateSpaceRequest.o: request/synch/UpdateSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-UpdateSpaceRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-UpdateSpaceRequest.Tpo -c -o storm_frontend_server-UpdateSpaceRequest.o `test -f 'request/synch/UpdateSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/UpdateSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-UpdateSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-UpdateSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/UpdateSpaceRequest.cpp' object='storm_frontend_server-UpdateSpaceRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-UpdateSpaceRequest.o `test -f 'request/synch/UpdateSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/UpdateSpaceRequest.cpp

storm_frontend_server-UpdateSpaceRequest.obj: request/synch/UpdateSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-UpdateSpaceRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-UpdateSpaceRequest.Tpo -c -o storm_frontend_server-UpdateSpaceRequest.obj `if test -f 'request/synch/UpdateSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/UpdateSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/UpdateSpaceRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-UpdateSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-UpdateSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/UpdateSpaceRequest.cpp' object='storm_frontend_server-UpdateSpaceRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-UpdateSpaceRequest.obj `if test -f 'request/synch/UpdateSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/UpdateSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/UpdateSpaceRequest.cpp'; fi`

storm_frontend_server-StatusUpdateSpaceRequest.o: request/synch/StatusUpdateSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-StatusUpdateSpaceRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-StatusUpdateSpaceRequest.Tpo -c -o storm_frontend_server-StatusUpdateSpaceRequest.o `test -f 'request/synch/StatusUpdateSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/StatusUpdateSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-StatusUpdateSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-StatusUpdateSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/StatusUpdateSpaceRequest.cpp' object='storm_frontend_server-StatusUpdateSpaceRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-StatusUpdateSpaceRequest.o `test -f 'request/synch/StatusUpdateSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/StatusUpdateSpaceRequest.cpp

storm_frontend_server-StatusUpdateSpaceRequest.obj: request/synch/StatusUpdateSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-StatusUpdateSpaceRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-StatusUpdateSpaceRequest.Tpo -c -o storm_frontend_server-StatusUpdateSpaceRequest.obj `if test -f 'request/synch/StatusUpdateSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/StatusUpdateSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/StatusUpdateSpaceRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-StatusUpdateSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-StatusUpdateSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/StatusUpdateSpaceRequest.cpp' object='storm_frontend_server-StatusUpdateSpaceRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-StatusUpdateSpaceRequest.obj `if test -f 'request/synch/StatusUpdateSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/StatusUpdateSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/StatusUpdateSpaceRequest.cpp'; fi`

storm_frontend_server-GetSpaceMetaDataRequest.o: request/synch/GetSpaceMetaDataRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-GetSpaceMetaDataRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-GetSpaceMetaDataRequest.Tpo -c -o storm_frontend_server-GetSpaceMetaDataRequest.o `test -f 'request/synch/GetSpaceMetaDataRequest.cpp' || echo '$(srcdir)/'`request/synch/GetSpaceMetaDataRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-GetSpaceMetaDataRequest.Tpo $(DEPDIR)/storm_frontend_server-GetSpaceMetaDataRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/GetSpaceMetaDataRequest.cpp' object='storm_frontend_server-GetSpaceMetaDataRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-GetSpaceMetaDataRequest.o `test -f 'request/synch/GetSpaceMetaDataRequest.cpp' || echo '$(srcdir)/'`request/synch/GetSpaceMetaDataRequest.cpp

storm_frontend_server-GetSpaceMetaDataRequest.obj: request/synch/GetSpaceMetaDataRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-GetSpaceMetaDataRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-GetSpaceMetaDataRequest.Tpo -c -o storm_frontend_server-GetSpaceMetaDataRequest.obj `if test -f 'request/synch/GetSpaceMetaDataRequest.cpp'; then $(CYGPATH_W) 'request/synch/GetSpaceMetaDataRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/GetSpaceMetaDataRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-GetSpaceMetaDataRequest.Tpo $(DEPDIR)/storm_frontend_server-GetSpaceMetaDataRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/GetSpaceMetaDataRequest.cpp' object='storm_frontend_server-GetSpaceMetaDataRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-GetSpaceMetaDataRequest.obj `if test -f 'request/synch/GetSpaceMetaDataRequest.cpp'; then $(CYGPATH_W) 'request/synch/GetSpaceMetaDataRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/GetSpaceMetaDataRequest.cpp'; fi`

storm_frontend_server-GetSpaceTokensRequest.o: request/synch/GetSpaceTokensRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-GetSpaceTokensRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-GetSpaceTokensRequest.Tpo -c -o storm_frontend_server-GetSpaceTokensRequest.o `test -f 'request/synch/GetSpaceTokensRequest.cpp' || echo '$(srcdir)/'`request/synch/GetSpaceTokensRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-GetSpaceTokensRequest.Tpo $(DEPDIR)/storm_frontend_server-GetSpaceTokensRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/GetSpaceTokensRequest.cpp' object='storm_frontend_server-GetSpaceTokensRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-GetSpaceTokensRequest.o `test -f 'request/synch/GetSpaceTokensRequest.cpp' || echo '$(srcdir)/'`request/synch/GetSpaceTokensRequest.cpp

storm_frontend_server-GetSpaceTokensRequest.obj: request/synch/GetSpaceTokensRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-GetSpaceTokensRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-GetSpaceTokensRequest.Tpo -c -o storm_frontend_server-GetSpaceTokensRequest.obj `if test -f 'request/synch/GetSpaceTokensRequest.cpp'; then $(CYGPATH_W) 'request/synch/GetSpaceTokensRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/GetSpaceTokensRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-GetSpaceTokensRequest.Tpo $(DEPDIR)/storm_frontend_server-GetSpaceTokensRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/GetSpaceTokensRequest.cpp' object='storm_frontend_server-GetSpaceTokensRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-GetSpaceTokensRequest.obj `if test -f 'request/synch/GetSpaceTokensRequest.cpp'; then $(CYGPATH_W) 'request/synch/GetSpaceTokensRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/GetSpaceTokensRequest.cpp'; fi`

storm_frontend_server-ChangeSpaceForFilesRequest.o: request/synch/ChangeSpaceForFilesRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ChangeSpaceForFilesRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-ChangeSpaceForFilesRequest.Tpo -c -o storm_frontend_server-ChangeSpaceForFilesRequest.o `test -f 'request/synch/ChangeSpaceForFilesRequest.cpp' || echo '$(srcdir)/'`request/synch/ChangeSpaceForFilesRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ChangeSpaceForFilesRequest.Tpo $(DEPDIR)/storm_frontend_server-ChangeSpaceForFilesRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ChangeSpaceForFilesRequest.cpp' object='storm_frontend_server-ChangeSpaceForFilesRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ChangeSpaceForFilesRequest.o `test -f 'request/synch/ChangeSpaceForFilesRequest.cpp' || echo '$(srcdir)/'`request/synch/ChangeSpaceForFilesRequest.cpp

storm_frontend_server-ChangeSpaceForFilesRequest.obj: request/synch/ChangeSpaceForFilesRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ChangeSpaceForFilesRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-ChangeSpaceForFilesRequest.Tpo -c -o storm_frontend_server-ChangeSpaceForFilesRequest.obj `if test -f 'request/synch/ChangeSpaceForFilesRequest.cpp'; then $(CYGPATH_W) 'request/synch/ChangeSpaceForFilesRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ChangeSpaceForFilesRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ChangeSpaceForFilesRequest.Tpo $(DEPDIR)/storm_frontend_server-ChangeSpaceForFilesRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ChangeSpaceForFilesRequest.cpp' object='storm_frontend_server-ChangeSpaceForFilesRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ChangeSpaceForFilesRequest.obj `if test -f 'request/synch/ChangeSpaceForFilesRequest.cpp'; then $(CYGPATH_W) 'request/synch/ChangeSpaceForFilesRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ChangeSpaceForFilesRequest.cpp'; fi`

storm_frontend_server-StatusChangeSpaceForFilesRequest.o: request/synch/StatusChangeSpaceForFilesRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-StatusChangeSpaceForFilesRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-StatusChangeSpaceForFilesRequest.Tpo -c -o storm_frontend_server-StatusChangeSpaceForFilesRequest.o `test -f 'request/synch/StatusChangeSpaceForFilesRequest.cpp' || echo '$(srcdir)/'`request/synch/StatusChangeSpaceForFilesRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-StatusChangeSpaceForFilesRequest.Tpo $(DEPDIR)/storm_frontend_server-StatusChangeSpaceForFilesRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/StatusChangeSpaceForFilesRequest.cpp' object='storm_frontend_server-StatusChangeSpaceForFilesRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-StatusChangeSpaceForFilesRequest.o `test -f 'request/synch/StatusChangeSpaceForFilesRequest.cpp' || echo '$(srcdir)/'`request/synch/StatusChangeSpaceForFilesRequest.cpp

storm_frontend_server-StatusChangeSpaceForFilesRequest.obj: request/synch/StatusChangeSpaceForFilesRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-StatusChangeSpaceForFilesRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-StatusChangeSpaceForFilesRequest.Tpo -c -o storm_frontend_server-StatusChangeSpaceForFilesRequest.obj `if test -f 'request/synch/StatusChangeSpaceForFilesRequest.cpp'; then $(CYGPATH_W) 'request/synch/StatusChangeSpaceForFilesRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/StatusChangeSpaceForFilesRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-StatusChangeSpaceForFilesRequest.Tpo $(DEPDIR)/storm_frontend_server-StatusChangeSpaceForFilesRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/StatusChangeSpaceForFilesRequest.cpp' object='storm_frontend_server-StatusChangeSpaceForFilesRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-StatusChangeSpaceForFilesRequest.obj `if test -f 'request/synch/StatusChangeSpaceForFilesRequest.cpp'; then $(CYGPATH_W) 'request/synch/StatusChangeSpaceForFilesRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/StatusChangeSpaceForFilesRequest.cpp'; fi`

storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.o: request/synch/ExtendFileLifeTimeInSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.Tpo -c -o storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.o `test -f 'request/synch/ExtendFileLifeTimeInSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/ExtendFileLifeTimeInSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ExtendFileLifeTimeInSpaceRequest.cpp' object='storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.o `test -f 'request/synch/ExtendFileLifeTimeInSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/ExtendFileLifeTimeInSpaceRequest.cpp

storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.obj: request/synch/ExtendFileLifeTimeInSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.Tpo -c -o storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.obj `if test -f 'request/synch/ExtendFileLifeTimeInSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/ExtendFileLifeTimeInSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ExtendFileLifeTimeInSpaceRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ExtendFileLifeTimeInSpaceRequest.cpp' object='storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ExtendFileLifeTimeInSpaceRequest.obj `if test -f 'request/synch/ExtendFileLifeTimeInSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/ExtendFileLifeTimeInSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ExtendFileLifeTimeInSpaceRequest.cpp'; fi`

storm_frontend_server-PurgeFromSpaceRequest.o: request/synch/PurgeFromSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-PurgeFromSpaceRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-PurgeFromSpaceRequest.Tpo -c -o storm_frontend_server-PurgeFromSpaceRequest.o `test -f 'request/synch/PurgeFromSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/PurgeFromSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-PurgeFromSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-PurgeFromSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/PurgeFromSpaceRequest.cpp' object='storm_frontend_server-PurgeFromSpaceRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-PurgeFromSpaceRequest.o `test -f 'request/synch/PurgeFromSpaceRequest.cpp' || echo '$(srcdir)/'`request/synch/PurgeFromSpaceRequest.cpp

storm_frontend_server-PurgeFromSpaceRequest.obj: request/synch/PurgeFromSpaceRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-PurgeFromSpaceRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-PurgeFromSpaceRequest.Tpo -c -o storm_frontend_server-PurgeFromSpaceRequest.obj `if test -f 'request/synch/PurgeFromSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/PurgeFromSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/PurgeFromSpaceRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-PurgeFromSpaceRequest.Tpo $(DEPDIR)/storm_frontend_server-PurgeFromSpaceRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/PurgeFromSpaceRequest.cpp' object='storm_frontend_server-PurgeFromSpaceRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-PurgeFromSpaceRequest.obj `if test -f 'request/synch/PurgeFromSpaceRequest.cpp'; then $(CYGPATH_W) 'request/synch/PurgeFromSpaceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/PurgeFromSpaceRequest.cpp'; fi`

storm_frontend_server-ReleaseFilesRequest.o: request/synch/ReleaseFilesRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ReleaseFilesRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-ReleaseFilesRequest.Tpo -c -o storm_frontend_server-ReleaseFilesRequest.o `test -f 'request/synch/ReleaseFilesRequest.cpp' || echo '$(srcdir)/'`request/synch/ReleaseFilesRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ReleaseFilesRequest.Tpo $(DEPDIR)/storm_frontend_server-ReleaseFilesRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ReleaseFilesRequest.cpp' object='storm_frontend_server-ReleaseFilesRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ReleaseFilesRequest.o `test -f 'request/synch/ReleaseFilesRequest.cpp' || echo '$(srcdir)/'`request/synch/ReleaseFilesRequest.cpp

storm_frontend_server-ReleaseFilesRequest.obj: request/synch/ReleaseFilesRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ReleaseFilesRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-ReleaseFilesRequest.Tpo -c -o storm_frontend_server-ReleaseFilesRequest.obj `if test -f 'request/synch/ReleaseFilesRequest.cpp'; then $(CYGPATH_W) 'request/synch/ReleaseFilesRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ReleaseFilesRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ReleaseFilesRequest.Tpo $(DEPDIR)/storm_frontend_server-ReleaseFilesRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ReleaseFilesRequest.cpp' object='storm_frontend_server-ReleaseFilesRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ReleaseFilesRequest.obj `if test -f 'request/synch/ReleaseFilesRequest.cpp'; then $(CYGPATH_W) 'request/synch/ReleaseFilesRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ReleaseFilesRequest.cpp'; fi`

storm_frontend_server-PutDoneRequest.o: request/synch/PutDoneRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-PutDoneRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-PutDoneRequest.Tpo -c -o storm_frontend_server-PutDoneRequest.o `test -f 'request/synch/PutDoneRequest.cpp' || echo '$(srcdir)/'`request/synch/PutDoneRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-PutDoneRequest.Tpo $(DEPDIR)/storm_frontend_server-PutDoneRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/PutDoneRequest.cpp' object='storm_frontend_server-PutDoneRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-PutDoneRequest.o `test -f 'request/synch/PutDoneRequest.cpp' || echo '$(srcdir)/'`request/synch/PutDoneRequest.cpp

storm_frontend_server-PutDoneRequest.obj: request/synch/PutDoneRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-PutDoneRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-PutDoneRequest.Tpo -c -o storm_frontend_server-PutDoneRequest.obj `if test -f 'request/synch/PutDoneRequest.cpp'; then $(CYGPATH_W) 'request/synch/PutDoneRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/PutDoneRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-PutDoneRequest.Tpo $(DEPDIR)/storm_frontend_server-PutDoneRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/PutDoneRequest.cpp' object='storm_frontend_server-PutDoneRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-PutDoneRequest.obj `if test -f 'request/synch/PutDoneRequest.cpp'; then $(CYGPATH_W) 'request/synch/PutDoneRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/PutDoneRequest.cpp'; fi`

storm_frontend_server-AbortRequestRequest.o: request/synch/AbortRequestRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-AbortRequestRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-AbortRequestRequest.Tpo -c -o storm_frontend_server-AbortRequestRequest.o `test -f 'request/synch/AbortRequestRequest.cpp' || echo '$(srcdir)/'`request/synch/AbortRequestRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-AbortRequestRequest.Tpo $(DEPDIR)/storm_frontend_server-AbortRequestRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/AbortRequestRequest.cpp' object='storm_frontend_server-AbortRequestRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-AbortRequestRequest.o `test -f 'request/synch/AbortRequestRequest.cpp' || echo '$(srcdir)/'`request/synch/AbortRequestRequest.cpp

storm_frontend_server-AbortRequestRequest.obj: request/synch/AbortRequestRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-AbortRequestRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-AbortRequestRequest.Tpo -c -o storm_frontend_server-AbortRequestRequest.obj `if test -f 'request/synch/AbortRequestRequest.cpp'; then $(CYGPATH_W) 'request/synch/AbortRequestRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/AbortRequestRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-AbortRequestRequest.Tpo $(DEPDIR)/storm_frontend_server-AbortRequestRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/AbortRequestRequest.cpp' object='storm_frontend_server-AbortRequestRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-AbortRequestRequest.obj `if test -f 'request/synch/AbortRequestRequest.cpp'; then $(CYGPATH_W) 'request/synch/AbortRequestRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/AbortRequestRequest.cpp'; fi`

storm_frontend_server-AbortFilesRequest.o: request/synch/AbortFilesRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-AbortFilesRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-AbortFilesRequest.Tpo -c -o storm_frontend_server-AbortFilesRequest.o `test -f 'request/synch/AbortFilesRequest.cpp' || echo '$(srcdir)/'`request/synch/AbortFilesRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-AbortFilesRequest.Tpo $(DEPDIR)/storm_frontend_server-AbortFilesRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/AbortFilesRequest.cpp' object='storm_frontend_server-AbortFilesRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-AbortFilesRequest.o `test -f 'request/synch/AbortFilesRequest.cpp' || echo '$(srcdir)/'`request/synch/AbortFilesRequest.cpp

storm_frontend_server-AbortFilesRequest.obj: request/synch/AbortFilesRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-AbortFilesRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-AbortFilesRequest.Tpo -c -o storm_frontend_server-AbortFilesRequest.obj `if test -f 'request/synch/AbortFilesRequest.cpp'; then $(CYGPATH_W) 'request/synch/AbortFilesRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/AbortFilesRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-AbortFilesRequest.Tpo $(DEPDIR)/storm_frontend_server-AbortFilesRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/AbortFilesRequest.cpp' object='storm_frontend_server-AbortFilesRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-AbortFilesRequest.obj `if test -f 'request/synch/AbortFilesRequest.cpp'; then $(CYGPATH_W) 'request/synch/AbortFilesRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/AbortFilesRequest.cpp'; fi`

storm_frontend_server-SuspendRequestRequest.o: request/synch/SuspendRequestRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-SuspendRequestRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-SuspendRequestRequest.Tpo -c -o storm_frontend_server-SuspendRequestRequest.o `test -f 'request/synch/SuspendRequestRequest.cpp' || echo '$(srcdir)/'`request/synch/SuspendRequestRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-SuspendRequestRequest.Tpo $(DEPDIR)/storm_frontend_server-SuspendRequestRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/SuspendRequestRequest.cpp' object='storm_frontend_server-SuspendRequestRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-SuspendRequestRequest.o `test -f 'request/synch/SuspendRequestRequest.cpp' || echo '$(srcdir)/'`request/synch/SuspendRequestRequest.cpp

storm_frontend_server-SuspendRequestRequest.obj: request/synch/SuspendRequestRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-SuspendRequestRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-SuspendRequestRequest.Tpo -c -o storm_frontend_server-SuspendRequestRequest.obj `if test -f 'request/synch/SuspendRequestRequest.cpp'; then $(CYGPATH_W) 'request/synch/SuspendRequestRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/SuspendRequestRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-SuspendRequestRequest.Tpo $(DEPDIR)/storm_frontend_server-SuspendRequestRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/SuspendRequestRequest.cpp' object='storm_frontend_server-SuspendRequestRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-SuspendRequestRequest.obj `if test -f 'request/synch/SuspendRequestRequest.cpp'; then $(CYGPATH_W) 'request/synch/SuspendRequestRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/SuspendRequestRequest.cpp'; fi`

storm_frontend_server-ResumeRequestRequest.o: request/synch/ResumeRequestRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ResumeRequestRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-ResumeRequestRequest.Tpo -c -o storm_frontend_server-ResumeRequestRequest.o `test -f 'request/synch/ResumeRequestRequest.cpp' || echo '$(srcdir)/'`request/synch/ResumeRequestRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ResumeRequestRequest.Tpo $(DEPDIR)/storm_frontend_server-ResumeRequestRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ResumeRequestRequest.cpp' object='storm_frontend_server-ResumeRequestRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ResumeRequestRequest.o `test -f 'request/synch/ResumeRequestRequest.cpp' || echo '$(srcdir)/'`request/synch/ResumeRequestRequest.cpp

storm_frontend_server-ResumeRequestRequest.obj: request/synch/ResumeRequestRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ResumeRequestRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-ResumeRequestRequest.Tpo -c -o storm_frontend_server-ResumeRequestRequest.obj `if test -f 'request/synch/ResumeRequestRequest.cpp'; then $(CYGPATH_W) 'request/synch/ResumeRequestRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ResumeRequestRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ResumeRequestRequest.Tpo $(DEPDIR)/storm_frontend_server-ResumeRequestRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ResumeRequestRequest.cpp' object='storm_frontend_server-ResumeRequestRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ResumeRequestRequest.obj `if test -f 'request/synch/ResumeRequestRequest.cpp'; then $(CYGPATH_W) 'request/synch/ResumeRequestRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ResumeRequestRequest.cpp'; fi`

storm_frontend_server-ExtendFileLifeTimeRequest.o: request/synch/ExtendFileLifeTimeRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ExtendFileLifeTimeRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeRequest.Tpo -c -o storm_frontend_server-ExtendFileLifeTimeRequest.o `test -f 'request/synch/ExtendFileLifeTimeRequest.cpp' || echo '$(srcdir)/'`request/synch/ExtendFileLifeTimeRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeRequest.Tpo $(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ExtendFileLifeTimeRequest.cpp' object='storm_frontend_server-ExtendFileLifeTimeRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ExtendFileLifeTimeRequest.o `test -f 'request/synch/ExtendFileLifeTimeRequest.cpp' || echo '$(srcdir)/'`request/synch/ExtendFileLifeTimeRequest.cpp

storm_frontend_server-ExtendFileLifeTimeRequest.obj: request/synch/ExtendFileLifeTimeRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ExtendFileLifeTimeRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeRequest.Tpo -c -o storm_frontend_server-ExtendFileLifeTimeRequest.obj `if test -f 'request/synch/ExtendFileLifeTimeRequest.cpp'; then $(CYGPATH_W) 'request/synch/ExtendFileLifeTimeRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ExtendFileLifeTimeRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeRequest.Tpo $(DEPDIR)/storm_frontend_server-ExtendFileLifeTimeRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/ExtendFileLifeTimeRequest.cpp' object='storm_frontend_server-ExtendFileLifeTimeRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ExtendFileLifeTimeRequest.obj `if test -f 'request/synch/ExtendFileLifeTimeRequest.cpp'; then $(CYGPATH_W) 'request/synch/ExtendFileLifeTimeRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/ExtendFileLifeTimeRequest.cpp'; fi`

storm_frontend_server-GetTransferProtocolsRequest.o: request/synch/GetTransferProtocolsRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-GetTransferProtocolsRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-GetTransferProtocolsRequest.Tpo -c -o storm_frontend_server-GetTransferProtocolsRequest.o `test -f 'request/synch/GetTransferProtocolsRequest.cpp' || echo '$(srcdir)/'`request/synch/GetTransferProtocolsRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-GetTransferProtocolsRequest.Tpo $(DEPDIR)/storm_frontend_server-GetTransferProtocolsRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/GetTransferProtocolsRequest.cpp' object='storm_frontend_server-GetTransferProtocolsRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-GetTransferProtocolsRequest.o `test -f 'request/synch/GetTransferProtocolsRequest.cpp' || echo '$(srcdir)/'`request/synch/GetTransferProtocolsRequest.cpp

storm_frontend_server-GetTransferProtocolsRequest.obj: request/synch/GetTransferProtocolsRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-GetTransferProtocolsRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-GetTransferProtocolsRequest.Tpo -c -o storm_frontend_server-GetTransferProtocolsRequest.obj `if test -f 'request/synch/GetTransferProtocolsRequest.cpp'; then $(CYGPATH_W) 'request/synch/GetTransferProtocolsRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/GetTransferProtocolsRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-GetTransferProtocolsRequest.Tpo $(DEPDIR)/storm_frontend_server-GetTransferProtocolsRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/GetTransferProtocolsRequest.cpp' object='storm_frontend_server-GetTransferProtocolsRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-GetTransferProtocolsRequest.obj `if test -f 'request/synch/GetTransferProtocolsRequest.cpp'; then $(CYGPATH_W) 'request/synch/GetTransferProtocolsRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/GetTransferProtocolsRequest.cpp'; fi`

storm_frontend_server-PingRequest.o: request/synch/PingRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-PingRequest.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-PingRequest.Tpo -c -o storm_frontend_server-PingRequest.o `test -f 'request/synch/PingRequest.cpp' || echo '$(srcdir)/'`request/synch/PingRequest.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-PingRequest.Tpo $(DEPDIR)/storm_frontend_server-PingRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/PingRequest.cpp' object='storm_frontend_server-PingRequest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-PingRequest.o `test -f 'request/synch/PingRequest.cpp' || echo '$(srcdir)/'`request/synch/PingRequest.cpp

storm_frontend_server-PingRequest.obj: request/synch/PingRequest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-PingRequest.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-PingRequest.Tpo -c -o storm_frontend_server-PingRequest.obj `if test -f 'request/synch/PingRequest.cpp'; then $(CYGPATH_W) 'request/synch/PingRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/PingRequest.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-PingRequest.Tpo $(DEPDIR)/storm_frontend_server-PingRequest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='request/synch/PingRequest.cpp' object='storm_frontend_server-PingRequest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-PingRequest.obj `if test -f 'request/synch/PingRequest.cpp'; then $(CYGPATH_W) 'request/synch/PingRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/request/synch/PingRequest.cpp'; fi`

storm_frontend_server-ProtocolChecker.o: ProtocolChecker.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ProtocolChecker.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-ProtocolChecker.Tpo -c -o storm_frontend_server-ProtocolChecker.o `test -f 'ProtocolChecker.cpp' || echo '$(srcdir)/'`ProtocolChecker.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ProtocolChecker.Tpo $(DEPDIR)/storm_frontend_server-ProtocolChecker.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ProtocolChecker.cpp' object='storm_frontend_server-ProtocolChecker.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ProtocolChecker.o `test -f 'ProtocolChecker.cpp' || echo '$(srcdir)/'`ProtocolChecker.cpp

storm_frontend_server-ProtocolChecker.obj: ProtocolChecker.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ProtocolChecker.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-ProtocolChecker.Tpo -c -o storm_frontend_server-ProtocolChecker.obj `if test -f 'ProtocolChecker.cpp'; then $(CYGPATH_W) 'ProtocolChecker.cpp'; else $(CYGPATH_W) '$(srcdir)/ProtocolChecker.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ProtocolChecker.Tpo $(DEPDIR)/storm_frontend_server-ProtocolChecker.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ProtocolChecker.cpp' object='storm_frontend_server-ProtocolChecker.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ProtocolChecker.obj `if test -f 'ProtocolChecker.cpp'; then $(CYGPATH_W) 'ProtocolChecker.cpp'; else $(CYGPATH_W) '$(srcdir)/ProtocolChecker.cpp'; fi`

storm_frontend_server-Authorization.o: Authorization.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-Authorization.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-Authorization.Tpo -c -o storm_frontend_server-Authorization.o `test -f 'Authorization.cpp' || echo '$(srcdir)/'`Authorization.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-Authorization.Tpo $(DEPDIR)/storm_frontend_server-Authorization.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Authorization.cpp' object='storm_frontend_server-Authorization.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-Authorization.o `test -f 'Authorization.cpp' || echo '$(srcdir)/'`Authorization.cpp

storm_frontend_server-Authorization.obj: Authorization.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-Authorization.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-Authorization.Tpo -c -o storm_frontend_server-Authorization.obj `if test -f 'Authorization.cpp'; then $(CYGPATH_W) 'Authorization.cpp'; else $(CYGPATH_W) '$(srcdir)/Authorization.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-Authorization.Tpo $(DEPDIR)/storm_frontend_server-Authorization.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Authorization.cpp' object='storm_frontend_server-Authorization.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-Authorization.obj `if test -f 'Authorization.cpp'; then $(CYGPATH_W) 'Authorization.cpp'; else $(CYGPATH_W) '$(srcdir)/Authorization.cpp'; fi`

storm_frontend_server-asynch.o: asynch.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-asynch.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-asynch.Tpo -c -o storm_frontend_server-asynch.o `test -f 'asynch.cpp' || echo '$(srcdir)/'`asynch.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-asynch.Tpo $(DEPDIR)/storm_frontend_server-asynch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='asynch.cpp' object='storm_frontend_server-asynch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-asynch.o `test -f 'asynch.cpp' || echo '$(srcdir)/'`asynch.cpp

storm_frontend_server-asynch.obj: asynch.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-asynch.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-asynch.Tpo -c -o storm_frontend_server-asynch.obj `if test -f 'asynch.cpp'; then $(CYGPATH_W) 'asynch.cpp'; else $(CYGPATH_W) '$(srcdir)/asynch.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-asynch.Tpo $(DEPDIR)/storm_frontend_server-asynch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='asynch.cpp' object='storm_frontend_server-asynch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-asynch.obj `if test -f 'asynch.cpp'; then $(CYGPATH_W) 'asynch.cpp'; else $(CYGPATH_W) '$(srcdir)/asynch.cpp'; fi`

storm_frontend_server-asynch_status.o: asynch_status.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-asynch_status.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-asynch_status.Tpo -c -o storm_frontend_server-asynch_status.o `test -f 'asynch_status.cpp' || echo '$(srcdir)/'`asynch_status.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-asynch_status.Tpo $(DEPDIR)/storm_frontend_server-asynch_status.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='asynch_status.cpp' object='storm_frontend_server-asynch_status.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-asynch_status.o `test -f 'asynch_status.cpp' || echo '$(srcdir)/'`asynch_status.cpp

storm_frontend_server-asynch_status.obj: asynch_status.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-asynch_status.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-asynch_status.Tpo -c -o storm_frontend_server-asynch_status.obj `if test -f 'asynch_status.cpp'; then $(CYGPATH_W) 'asynch_status.cpp'; else $(CYGPATH_W) '$(srcdir)/asynch_status.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-asynch_status.Tpo $(DEPDIR)/storm_frontend_server-asynch_status.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='asynch_status.cpp' object='storm_frontend_server-asynch_status.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-asynch_status.obj `if test -f 'asynch_status.cpp'; then $(CYGPATH_W) 'asynch_status.cpp'; else $(CYGPATH_W) '$(srcdir)/asynch_status.cpp'; fi`

storm_frontend_server-Surl.o: Surl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-Surl.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-Surl.Tpo -c -o storm_frontend_server-Surl.o `test -f 'Surl.cpp' || echo '$(srcdir)/'`Surl.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-Surl.Tpo $(DEPDIR)/storm_frontend_server-Surl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Surl.cpp' object='storm_frontend_server-Surl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-Surl.o `test -f 'Surl.cpp' || echo '$(srcdir)/'`Surl.cpp

storm_frontend_server-Surl.obj: Surl.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-Surl.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-Surl.Tpo -c -o storm_frontend_server-Surl.obj `if test -f 'Surl.cpp'; then $(CYGPATH_W) 'Surl.cpp'; else $(CYGPATH_W) '$(srcdir)/Surl.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-Surl.Tpo $(DEPDIR)/storm_frontend_server-Surl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Surl.cpp' object='storm_frontend_server-Surl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-Surl.obj `if test -f 'Surl.cpp'; then $(CYGPATH_W) 'Surl.cpp'; else $(CYGPATH_W) '$(srcdir)/Surl.cpp'; fi`

storm_frontend_server-srmv2_GetRequestSummary.o: srmv2_GetRequestSummary.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-srmv2_GetRequestSummary.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2_GetRequestSummary.Tpo -c -o storm_frontend_server-srmv2_GetRequestSummary.o `test -f 'srmv2_GetRequestSummary.cpp' || echo '$(srcdir)/'`srmv2_GetRequestSummary.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2_GetRequestSummary.Tpo $(DEPDIR)/storm_frontend_server-srmv2_GetRequestSummary.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='srmv2_GetRequestSummary.cpp' object='storm_frontend_server-srmv2_GetRequestSummary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-srmv2_GetRequestSummary.o `test -f 'srmv2_GetRequestSummary.cpp' || echo '$(srcdir)/'`srmv2_GetRequestSummary.cpp

storm_frontend_server-srmv2_GetRequestSummary.obj: srmv2_GetRequestSummary.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-srmv2_GetRequestSummary.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2_GetRequestSummary.Tpo -c -o storm_frontend_server-srmv2_GetRequestSummary.obj `if test -f 'srmv2_GetRequestSummary.cpp'; then $(CYGPATH_W) 'srmv2_GetRequestSummary.cpp'; else $(CYGPATH_W) '$(srcdir)/srmv2_GetRequestSummary.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2_GetRequestSummary.Tpo $(DEPDIR)/storm_frontend_server-srmv2_GetRequestSummary.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='srmv2_GetRequestSummary.cpp' object='storm_frontend_server-srmv2_GetRequestSummary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-srmv2_GetRequestSummary.obj `if test -f 'srmv2_GetRequestSummary.cpp'; then $(CYGPATH_W) 'srmv2_GetRequestSummary.cpp'; else $(CYGPATH_W) '$(srcdir)/srmv2_GetRequestSummary.cpp'; fi`

storm_frontend_server-srmv2_GetRequestTokens.o: srmv2_GetRequestTokens.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-srmv2_GetRequestTokens.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2_GetRequestTokens.Tpo -c -o storm_frontend_server-srmv2_GetRequestTokens.o `test -f 'srmv2_GetRequestTokens.cpp' || echo '$(srcdir)/'`srmv2_GetRequestTokens.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2_GetRequestTokens.Tpo $(DEPDIR)/storm_frontend_server-srmv2_GetRequestTokens.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='srmv2_GetRequestTokens.cpp' object='storm_frontend_server-srmv2_GetRequestTokens.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-srmv2_GetRequestTokens.o `test -f 'srmv2_GetRequestTokens.cpp' || echo '$(srcdir)/'`srmv2_GetRequestTokens.cpp

storm_frontend_server-srmv2_GetRequestTokens.obj: srmv2_GetRequestTokens.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-srmv2_GetRequestTokens.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2_GetRequestTokens.Tpo -c -o storm_frontend_server-srmv2_GetRequestTokens.obj `if test -f 'srmv2_GetRequestTokens.cpp'; then $(CYGPATH_W) 'srmv2_GetRequestTokens.cpp'; else $(CYGPATH_W) '$(srcdir)/srmv2_GetRequestTokens.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2_GetRequestTokens.Tpo $(DEPDIR)/storm_frontend_server-srmv2_GetRequestTokens.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='srmv2_GetRequestTokens.cpp' object='storm_frontend_server-srmv2_GetRequestTokens.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-srmv2_GetRequestTokens.obj `if test -f 'srmv2_GetRequestTokens.cpp'; then $(CYGPATH_W) 'srmv2_GetRequestTokens.cpp'; else $(CYGPATH_W) '$(srcdir)/srmv2_GetRequestTokens.cpp'; fi`

storm_frontend_server-FrontendConfiguration.o: FrontendConfiguration.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-FrontendConfiguration.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-FrontendConfiguration.Tpo -c -o storm_frontend_server-FrontendConfiguration.o `test -f 'FrontendConfiguration.cpp' || echo '$(srcdir)/'`FrontendConfiguration.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-FrontendConfiguration.Tpo $(DEPDIR)/storm_frontend_server-FrontendConfiguration.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FrontendConfiguration.cpp' object='storm_frontend_server-FrontendConfiguration.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-FrontendConfiguration.o `test -f 'FrontendConfiguration.cpp' || echo '$(srcdir)/'`FrontendConfiguration.cpp

storm_frontend_server-FrontendConfiguration.obj: FrontendConfiguration.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-FrontendConfiguration.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-FrontendConfiguration.Tpo -c -o storm_frontend_server-FrontendConfiguration.obj `if test -f 'FrontendConfiguration.cpp'; then $(CYGPATH_W) 'FrontendConfiguration.cpp'; else $(CYGPATH_W) '$(srcdir)/FrontendConfiguration.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-FrontendConfiguration.Tpo $(DEPDIR)/storm_frontend_server-FrontendConfiguration.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FrontendConfiguration.cpp' object='storm_frontend_server-FrontendConfiguration.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-FrontendConfiguration.obj `if test -f 'FrontendConfiguration.cpp'; then $(CYGPATH_W) 'FrontendConfiguration.cpp'; else $(CYGPATH_W) '$(srcdir)/FrontendConfiguration.cpp'; fi`

storm_frontend_server-HttpPostClient.o: HttpPostClient.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-HttpPostClient.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-HttpPostClient.Tpo -c -o storm_frontend_server-HttpPostClient.o `test -f 'HttpPostClient.cpp' || echo '$(srcdir)/'`HttpPostClient.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-HttpPostClient.Tpo $(DEPDIR)/storm_frontend_server-HttpPostClient.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HttpPostClient.cpp' object='storm_frontend_server-HttpPostClient.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-HttpPostClient.o `test -f 'HttpPostClient.cpp' || echo '$(srcdir)/'`HttpPostClient.cpp

storm_frontend_server-HttpPostClient.obj: HttpPostClient.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-HttpPostClient.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-HttpPostClient.Tpo -c -o storm_frontend_server-HttpPostClient.obj `if test -f 'HttpPostClient.cpp'; then $(CYGPATH_W) 'HttpPostClient.cpp'; else $(CYGPATH_W) '$(srcdir)/HttpPostClient.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-HttpPostClient.Tpo $(DEPDIR)/storm_frontend_server-HttpPostClient.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HttpPostClient.cpp' object='storm_frontend_server-HttpPostClient.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-HttpPostClient.obj `if test -f 'HttpPostClient.cpp'; then $(CYGPATH_W) 'HttpPostClient.cpp'; else $(CYGPATH_W) '$(srcdir)/HttpPostClient.cpp'; fi`

storm_frontend_server-DBConnectionPool.o: DBConnectionPool.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-DBConnectionPool.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-DBConnectionPool.Tpo -c -o storm_frontend_server-DBConnectionPool.o `test -f 'DBConnectionPool.cpp' || echo '$(srcdir)/'`DBConnectionPool.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-DBConnectionPool.Tpo $(DEPDIR)/storm_frontend_server-DBConnectionPool.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DBConnectionPool.cpp' object='storm_frontend_server-DBConnectionPool.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-DBConnectionPool.o `test -f 'DBConnectionPool.cpp' || echo '$(srcdir)/'`DBConnectionPool.cpp

storm_frontend_server-DBConnectionPool.obj: DBConnectionPool.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-DBConnectionPool.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-DBConnectionPool.Tpo -c -o storm_frontend_server-DBConnectionPool.obj `if test -f 'DBConnectionPool.cpp'; then $(CYGPATH_W) 'DBConnectionPool.cpp'; else $(CYGPATH_W) '$(srcdir)/DBConnectionPool.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-DBConnectionPool.Tpo $(DEPDIR)/storm_frontend_server-DBConnectionPool.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DBConnectionPool.cpp' object='storm_frontend_server-DBConnectionPool.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-DBConnectionPool.obj `if test -f 'DBConnectionPool.cpp'; then $(CYGPATH_W) 'DBConnectionPool.cpp'; else $(CYGPATH_W) '$(srcdir)/DBConnectionPool.cpp'; fi`

storm_frontend_server-ThreadPool.o: ThreadPool.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ThreadPool.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-ThreadPool.Tpo -c -o storm_frontend_server-ThreadPool.o `test -f 'ThreadPool.cpp' || echo '$(srcdir)/'`ThreadPool.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ThreadPool.Tpo $(DEPDIR)/storm_frontend_server-ThreadPool.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ThreadPool.cpp' object='storm_frontend_server-ThreadPool.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ThreadPool.o `test -f 'ThreadPool.cpp' || echo '$(srcdir)/'`ThreadPool.cpp

storm_frontend_server-ThreadPool.obj: ThreadPool.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-ThreadPool.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-ThreadPool.Tpo -c -o storm_frontend_server-ThreadPool.obj `if test -f 'ThreadPool.cpp'; then $(CYGPATH_W) 'ThreadPool.cpp'; else $(CYGPATH_W) '$(srcdir)/ThreadPool.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-ThreadPool.Tpo $(DEPDIR)/storm_frontend_server-ThreadPool.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ThreadPool.cpp' object='storm_frontend_server-ThreadPool.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-ThreadPool.obj `if test -f 'ThreadPool.cpp'; then $(CYGPATH_W) 'ThreadPool.cpp'; else $(CYGPATH_W) '$(srcdir)/ThreadPool.cpp'; fi`

storm_frontend_server-srmlogit.o: srmlogit.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-srmlogit.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmlogit.Tpo -c -o storm_frontend_server-srmlogit.o `test -f 'srmlogit.cpp' || echo '$(srcdir)/'`srmlogit.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmlogit.Tpo $(DEPDIR)/storm_frontend_server-srmlogit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='srmlogit.cpp' object='storm_frontend_server-srmlogit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-srmlogit.o `test -f 'srmlogit.cpp' || echo '$(srcdir)/'`srmlogit.cpp

storm_frontend_server-srmlogit.obj: srmlogit.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-srmlogit.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmlogit.Tpo -c -o storm_frontend_server-srmlogit.obj `if test -f 'srmlogit.cpp'; then $(CYGPATH_W) 'srmlogit.cpp'; else $(CYGPATH_W) '$(srcdir)/srmlogit.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmlogit.Tpo $(DEPDIR)/storm_frontend_server-srmlogit.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='srmlogit.cpp' object='storm_frontend_server-srmlogit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-srmlogit.obj `if test -f 'srmlogit.cpp'; then $(CYGPATH_W) 'srmlogit.cpp'; else $(CYGPATH_W) '$(srcdir)/srmlogit.cpp'; fi`

storm_frontend_server-soap_util.o: soap_util.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-soap_util.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-soap_util.Tpo -c -o storm_frontend_server-soap_util.o `test -f 'soap_util.cpp' || echo '$(srcdir)/'`soap_util.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-soap_util.Tpo $(DEPDIR)/storm_frontend_server-soap_util.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='soap_util.cpp' object='storm_frontend_server-soap_util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-soap_util.o `test -f 'soap_util.cpp' || echo '$(srcdir)/'`soap_util.cpp

storm_frontend_server-soap_util.obj: soap_util.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-soap_util.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-soap_util.Tpo -c -o storm_frontend_server-soap_util.obj `if test -f 'soap_util.cpp'; then $(CYGPATH_W) 'soap_util.cpp'; else $(CYGPATH_W) '$(srcdir)/soap_util.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-soap_util.Tpo $(DEPDIR)/storm_frontend_server-soap_util.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='soap_util.cpp' object='storm_frontend_server-soap_util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-soap_util.obj `if test -f 'soap_util.cpp'; then $(CYGPATH_W) 'soap_util.cpp'; else $(CYGPATH_W) '$(srcdir)/soap_util.cpp'; fi`

storm_frontend_server-synch.o: synch.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-synch.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-synch.Tpo -c -o storm_frontend_server-synch.o `test -f 'synch.cpp' || echo '$(srcdir)/'`synch.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-synch.Tpo $(DEPDIR)/storm_frontend_server-synch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='synch.cpp' object='storm_frontend_server-synch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-synch.o `test -f 'synch.cpp' || echo '$(srcdir)/'`synch.cpp

storm_frontend_server-synch.obj: synch.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-synch.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-synch.Tpo -c -o storm_frontend_server-synch.obj `if test -f 'synch.cpp'; then $(CYGPATH_W) 'synch.cpp'; else $(CYGPATH_W) '$(srcdir)/synch.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-synch.Tpo $(DEPDIR)/storm_frontend_server-synch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='synch.cpp' object='storm_frontend_server-synch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-synch.obj `if test -f 'synch.cpp'; then $(CYGPATH_W) 'synch.cpp'; else $(CYGPATH_W) '$(srcdir)/synch.cpp'; fi`

storm_frontend_server-token_validator.o: token_validator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-token_validator.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-token_validator.Tpo -c -o storm_frontend_server-token_validator.o `test -f 'token_validator.cpp' || echo '$(srcdir)/'`token_validator.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-token_validator.Tpo $(DEPDIR)/storm_frontend_server-token_validator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='token_validator.cpp' object='storm_frontend_server-token_validator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-token_validator.o `test -f 'token_validator.cpp' || echo '$(srcdir)/'`token_validator.cpp

storm_frontend_server-token_validator.obj: token_validator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-token_validator.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-token_validator.Tpo -c -o storm_frontend_server-token_validator.obj `if test -f 'token_validator.cpp'; then $(CYGPATH_W) 'token_validator.cpp'; else $(CYGPATH_W) '$(srcdir)/token_validator.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-token_validator.Tpo $(DEPDIR)/storm_frontend_server-token_validator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='token_validator.cpp' object='storm_frontend_server-token_validator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-token_validator.obj `if test -f 'token_validator.cpp'; then $(CYGPATH_W) 'token_validator.cpp'; else $(CYGPATH_W) '$(srcdir)/token_validator.cpp'; fi`

storm_frontend_server-srmv2C.o: srmv2C.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-srmv2C.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2C.Tpo -c -o storm_frontend_server-srmv2C.o `test -f 'srmv2C.cc' || echo '$(srcdir)/'`srmv2C.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2C.Tpo $(DEPDIR)/storm_frontend_server-srmv2C.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='srmv2C.cc' object='storm_frontend_server-srmv2C.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-srmv2C.o `test -f 'srmv2C.cc' || echo '$(srcdir)/'`srmv2C.cc

storm_frontend_server-srmv2C.obj: srmv2C.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-srmv2C.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2C.Tpo -c -o storm_frontend_server-srmv2C.obj `if test -f 'srmv2C.cc'; then $(CYGPATH_W) 'srmv2C.cc'; else $(CYGPATH_W) '$(srcdir)/srmv2C.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2C.Tpo $(DEPDIR)/storm_frontend_server-srmv2C.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='srmv2C.cc' object='storm_frontend_server-srmv2C.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-srmv2C.obj `if test -f 'srmv2C.cc'; then $(CYGPATH_W) 'srmv2C.cc'; else $(CYGPATH_W) '$(srcdir)/srmv2C.cc'; fi`

storm_frontend_server-srmv2Server.o: srmv2Server.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-srmv2Server.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2Server.Tpo -c -o storm_frontend_server-srmv2Server.o `test -f 'srmv2Server.cc' || echo '$(srcdir)/'`srmv2Server.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2Server.Tpo $(DEPDIR)/storm_frontend_server-srmv2Server.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='srmv2Server.cc' object='storm_frontend_server-srmv2Server.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-srmv2Server.o `test -f 'srmv2Server.cc' || echo '$(srcdir)/'`srmv2Server.cc

storm_frontend_server-srmv2Server.obj: srmv2Server.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-srmv2Server.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-srmv2Server.Tpo -c -o storm_frontend_server-srmv2Server.obj `if test -f 'srmv2Server.cc'; then $(CYGPATH_W) 'srmv2Server.cc'; else $(CYGPATH_W) '$(srcdir)/srmv2Server.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-srmv2Server.Tpo $(DEPDIR)/storm_frontend_server-srmv2Server.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='srmv2Server.cc' object='storm_frontend_server-srmv2Server.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-srmv2Server.obj `if test -f 'srmv2Server.cc'; then $(CYGPATH_W) 'srmv2Server.cc'; else $(CYGPATH_W) '$(srcdir)/srmv2Server.cc'; fi`

storm_frontend_server-Monitoring.o: Monitoring.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-Monitoring.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-Monitoring.Tpo -c -o storm_frontend_server-Monitoring.o `test -f 'Monitoring.cpp' || echo '$(srcdir)/'`Monitoring.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-Monitoring.Tpo $(DEPDIR)/storm_frontend_server-Monitoring.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Monitoring.cpp' object='storm_frontend_server-Monitoring.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-Monitoring.o `test -f 'Monitoring.cpp' || echo '$(srcdir)/'`Monitoring.cpp

storm_frontend_server-Monitoring.obj: Monitoring.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-Monitoring.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-Monitoring.Tpo -c -o storm_frontend_server-Monitoring.obj `if test -f 'Monitoring.cpp'; then $(CYGPATH_W) 'Monitoring.cpp'; else $(CYGPATH_W) '$(srcdir)/Monitoring.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-Monitoring.Tpo $(DEPDIR)/storm_frontend_server-Monitoring.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Monitoring.cpp' object='storm_frontend_server-Monitoring.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-Monitoring.obj `if test -f 'Monitoring.cpp'; then $(CYGPATH_W) 'Monitoring.cpp'; else $(CYGPATH_W) '$(srcdir)/Monitoring.cpp'; fi`

storm_frontend_server-storm-frontend.o: storm-frontend.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-storm-frontend.o -MD -MP -MF $(DEPDIR)/storm_frontend_server-storm-frontend.Tpo -c -o storm_frontend_server-storm-frontend.o `test -f 'storm-frontend.cpp' || echo '$(srcdir)/'`storm-frontend.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-storm-frontend.Tpo $(DEPDIR)/storm_frontend_server-storm-frontend.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='storm-frontend.cpp' object='storm_frontend_server-storm-frontend.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-storm-frontend.o `test -f 'storm-frontend.cpp' || echo '$(srcdir)/'`storm-frontend.cpp

storm_frontend_server-storm-frontend.obj: storm-frontend.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -MT storm_frontend_server-storm-frontend.obj -MD -MP -MF $(DEPDIR)/storm_frontend_server-storm-frontend.Tpo -c -o storm_frontend_server-storm-frontend.obj `if test -f 'storm-frontend.cpp'; then $(CYGPATH_W) 'storm-frontend.cpp'; else $(CYGPATH_W) '$(srcdir)/storm-frontend.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/storm_frontend_server-storm-frontend.Tpo $(DEPDIR)/storm_frontend_server-storm-frontend.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='storm-frontend.cpp' object='storm_frontend_server-storm-frontend.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(storm_frontend_server_CXXFLAGS) $(CXXFLAGS) -c -o storm_frontend_server-storm-frontend.obj `if test -f 'storm-frontend.cpp'; then $(CYGPATH_W) 'storm-frontend.cpp'; else $(CYGPATH_W) '$(srcdir)/storm-frontend.cpp'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-sbinPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-sbinPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-sbinPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-sbinPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-local distclean-tags distdir dvi dvi-am html html-am \
	info info-am install install-am install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-sbinPROGRAMS


srmv2C.cc:
	@echo "Copying file \"srmv2C.cc\" from $(GENERATED_GSOAP_INCLUDES)"
	/bin/cp $(GENERATED_GSOAP_INCLUDES)/srmv2C.cc .

srmv2Server.cc:
	@echo "Copying file \"srmv2Server.cc\" from $(GENERATED_GSOAP_INCLUDES)"
	/bin/cp $(GENERATED_GSOAP_INCLUDES)/srmv2Server.cc .

distclean-local:
	rm -f srmv2C.cc srmv2Server.cc

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
