#!/bin/sh
#
# StoRM Frontend start script

STORM_FE_USER=storm

prog="storm-frontend"
PIDDIR=/var/run
SUBSYSDIR=/var/lock/subsys
PIDFILE=$PIDDIR/$prog.pid

FRONTEND_DAEMON=@PREFIX@/sbin/$prog
CONFIGURATION_FILE=@PREFIX@/etc/storm-frontend.conf

if [ -z $GRIDMAPDIR ]; then
    export GRIDMAPDIR=/etc/grid-security/gridmapdir
fi

if [ -z $GRIDMAP ]; then
    export GRIDMAP=/etc/grid-security/grid-mapfile
fi

get_pid() {
   if [ -e $PIDFILE ]; then
       PID=`cat $PIDFILE`
   else
       return 1    # means error
   fi
   return 0        # meand success
}

check_if_running() {
    get_pid
    if [ $? -ne 0 ]; then
        return 0  # means "false", not running
    fi
    IS_UP=`netstat -lp | grep $PID`
    if [ -z "$IS_UP" ]; then
        return 0  # means "false", not running
    fi
    return 1      # means "true", is running
}


# Blindly attempt to create useful directories
[ ! -d $PIDDIR ] && mkdir -p $PIDDIR >& /dev/null
#[ ! -d $SUBSYSDIR ] && mkdir -p $SUBSYSDIR >& /dev/null

RETVAL=0

case "$1" in
  start)
    # Script must be launched as root
    if [ ! `whoami` = "root" ]; then
        echo "Error: you must be root to run this script."
        exit 1
    fi

    echo -n "Starting $prog as user \"$STORM_FE_USER\"... "

    # Check if another instance is already running
    get_pid
    if [ $? -eq 0 ]; then
        check_if_running
        if [ $? -eq 1 ]; then
            echo "already running."
            exit 1
        else
            # There's an old PIDFILE (maybe previous instance was crashed)
            # and it must be removed
            rm -f $PIDFILE
        fi
    fi
    
    # Make sure the FE can write the logfile and save the proxies
    # and set environment variable
    if [ "root" != $STORM_FE_USER ]; then
        mkdir -p @PREFIX@/var
        chown ${STORM_FE_USER}:${STORM_FE_USER} @PREFIX@/var
        export X509_USER_CERT=/etc/grid-security/$STORM_FE_USER/hostcert.pem
        export X509_USER_KEY=/etc/grid-security/$STORM_FE_USER/hostkey.pem
    fi

    # Launch the frontend
    su -m -c "$FRONTEND_DAEMON -c $CONFIGURATION_FILE" $STORM_FE_USER

    if [ $? -eq 0 ]; then
        pid=`ps -eo pid,ppid,comm | grep " 1 $prog$" | awk '{print $1}'`
        echo $pid > $PIDFILE
        RETVAL=0
        echo "ok."
    else
        echo "ERROR: not started (see the log file for the details)."
        RETVAL=1
    fi
    ;;
  stop)
    check_if_running
    if [ $? -eq 0 ]; then
        echo "$prog already stopped"
        RETVAL=0
    else
        echo -n "Stopping $prog.."
        kill -2 `cat $PIDFILE` >& /dev/null
        if [ $? -eq 0 ]; then
            check_if_running
            while [ $? -eq 1 ]; do
                echo -n "."
                sleep 1
                check_if_running
            done
            rm -f $PIDFILE
            RETVAL=0
            echo " ok"
        else
            RETVAL=1
            echo " error"
        fi
    fi            
    ;;
  restart)
    $0 stop
    sleep 1
    if [ $? -eq 0 ]; then
        $0 start
    fi
    RETVAL=$?
    ;;
  status)
    check_if_running
    if [ $? -eq 1 ]; then
        echo "$prog (pid $PID) is running..."
    else
        echo "$prog is NOT running"
    fi
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart}"
    RETVAL=1
    ;;
esac

exit $RETVAL

