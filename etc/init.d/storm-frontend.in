#!/bin/sh
#
# StoRM Frontend start script

RETVAL=0
prog="storm-frontend"
PIDDIR=/var/run
PIDFILE=$PIDDIR/$prog.pid
SUBSYSDIR=/var/lock/subsys
LOCKFILE=$SUBSYSDIR/$prog.lock

FRONTEND_DAEMON=@PREFIX@/sbin/$prog
CONFIGURATION_FILE=@PREFIX@/etc/storm-frontend.conf

# Blindly attempt to create useful directories
[ ! -d $PIDDIR ] && mkdir -p $PIDDIR >& /dev/null
[ ! -d $SUBSYSDIR ] && mkdir -p $SUBSYSDIR >& /dev/null

case "$1" in
  start)
    # Script must be launched as root
    if [ ! `whoami` = "root" ]; then
        echo "Error: you must be root."
        exit 1
    fi

    # Check if another instance is already running
    if [ -e $LOCKFILE ]; then
        echo "Found lock file ($LOCKFILE). StoRM frontend already running."
        exit 1
    fi
    echo -n "Starting $prog... "

    # Launch the frontend
    $FRONTEND_DAEMON -c $CONFIGURATION_FILE

    if [ $? -eq 0 ]; then
        touch $LOCKFILE
        pid=`ps -eo pid,ppid,comm | grep " 1 $prog$" | awk '{print $1}'`
        rm -f $PIDFILE
        echo $pid > $PIDFILE
        RETVAL=0
        echo "ok"
    else
        echo "error ($prog not started)"
        RETVAL=1
    fi
    ;;
  stop)
    if [ -f $PIDFILE ]; then
        echo -n "Stopping $prog... "
        kill -2 -`cat $PIDFILE` >& /dev/null
        if [ $? -eq 0 ]; then
            rm -f $PIDFILE
            rm -f $LOCKFILE
            RETVAL=0
            echo "ok"
        else
            RETVAL=1
            echo "error"
        fi
    fi            
    ;;
  restart)
    $0 stop
    sleep 5
    if [ $? -eq 0 ]; then
        $0 start
    fi
    RETVAL=$?
    ;;
  status)
    pid=`ps -eo pid,ppid,comm | grep " 1 $prog$" | awk '{print $1}'`
    if [ -n "$pid" ]; then
        echo "$prog (pid $pid) is running..."
    else
        if [ -f $PIDFILE ]; then
            pid=`head -1 $PIDFILE`
            if [ "$pid" != "" ] ; then
                echo "$prog dead but pid file exists"
            fi
        else
            if [ -f $SUBSYS ]; then
                echo "$prog dead but subsys ($LOCKFILE) locked"
            else
                echo "$prog is stopped"
            fi
        fi
    fi
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart}"
    RETVAL=1
    ;;
esac

exit $RETVAL

